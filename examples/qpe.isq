import std;
import qft; // to use qft_inv

int x = 23;
int n = 6;

double theta(){
    return 2 * pi * x / (2 ** n);
}

procedure U(double theta, qbit q){
    X(q);
    ctrl GPhase(theta, q);
    X(q);
} deriving gate

procedure pow2_ctrlU(int n, qbit anc, qbit ev){
    double t = theta() * (2 ** n);
    ctrl U(t, anc, ev);
}

int phase_estimation(int n, qbit ev) {
    qbit anc[n];
    for i in 0:n {
        H(anc[i]);
        pow2_ctrlU(i, anc[i], ev);
    }
    qft_inv(anc);
    return M(anc);
}

procedure main()
{
    qbit ev; /* eigen vector of U is |0> */ 
    print phase_estimation(n, ev);
}