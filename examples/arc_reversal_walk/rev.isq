import std;

defgate U_0 = [
	-0.6, 0.4, 0.4, 0.4, 0.4, 0.0, 0.0, 0.0;
	0.4, -0.6, 0.4, 0.4, 0.4, 0.0, 0.0, 0.0;
	0.4, 0.4, -0.6, 0.4, 0.4, 0.0, 0.0, 0.0;
	0.4, 0.4, 0.4, -0.6, 0.4, 0.0, 0.0, 0.0;
	0.4, 0.4, 0.4, 0.4, -0.6, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0
];

defgate U_1 = [
	-0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0;
	0.5, -0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0;
	0.5, 0.5, -0.5, 0.5, 0.0, 0.0, 0.0, 0.0;
	0.5, 0.5, 0.5, -0.5, 0.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0
];

defgate U_2 = [
	-0.33333333333333337, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0;
	0.6666666666666666, -0.33333333333333337, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0;
	0.6666666666666666, 0.6666666666666666, -0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0
];

defgate U_3 = [
	-0.33333333333333337, 0.6666666666666666, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0;
	0.6666666666666666, -0.33333333333333337, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0;
	0.6666666666666666, 0.6666666666666666, 0.0, -0.33333333333333337, 0.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0
];

defgate U_4 = [
	0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0;
	0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0;
	1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0;
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0
];

procedure Grover_coin(qbit U_[3], qbit V_[3]){
	nctrl nctrl nctrl U_0(U_[0], U_[1], U_[2], V_[2], V_[1], V_[0]);
	ctrl nctrl nctrl U_1(U_[0], U_[1], U_[2], V_[2], V_[1], V_[0]);
	nctrl ctrl nctrl U_2(U_[0], U_[1], U_[2], V_[2], V_[1], V_[0]);
	ctrl ctrl nctrl U_3(U_[0], U_[1], U_[2], V_[2], V_[1], V_[0]);
	nctrl nctrl ctrl U_4(U_[0], U_[1], U_[2], V_[2], V_[1], V_[0]);
}

procedure rev_arc(qbit U_[3], qbit V_[3]){
	for i in 0:3{
		SWAP(U_[i], V_[i]);
	}
}

procedure walk(qbit U_[3], qbit V_[3]){
	Grover_coin(U_, V_);
	rev_arc(U_, V_);
}

procedure main(){
	qbit U_[3], V_[3];
	for i in 0:7{
		walk(U_, V_);
	}
	M(U_);
}

