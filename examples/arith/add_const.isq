package arith;

import std;
import arith.adder4;

procedure add1(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b0);
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b0);
} deriving gate

procedure add2(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b1);
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b1);
} deriving gate

procedure add3(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b0);
    X(b1);
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b0);
    X(b1);
} deriving gate

procedure add4(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b2);
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b2);
} deriving gate

procedure add5(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b0);
    X(b2);
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b0);
    X(b2);
} deriving gate

procedure add6(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b1);
    X(b2);
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b1);
    X(b2);
} deriving gate

procedure add7(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;

    // set b = |7>
    X(b0);
    X(b1);
    X(b2);

    adder4(a0, a1, a2, a3, b0, b1, b2, b3);

    X(b0);
    X(b1);
    X(b2);
} deriving gate

procedure add8(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b3); // set b = |8>
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b3);
} deriving gate

procedure test_add8() {
    qbit q[4];
    for i in 0:16 {
        set(q, i);
        add8(q[0], q[1], q[2], q[3]);
        print M(q);
        inv add8(q[0], q[1], q[2], q[3]);
        set(q, i);
    }
}

procedure add9(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b0);
    X(b3);
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b0);
    X(b3);
} deriving gate

procedure add10(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;
    X(b1);
    X(b3);
    adder4(a0, a1, a2, a3, b0, b1, b2, b3);
    X(b1);
    X(b3);
} deriving gate

procedure add11(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;

    // set b = |11>
    X(b0);
    X(b1);
    X(b3);

    adder4(a0, a1, a2, a3, b0, b1, b2, b3);

    X(b0);
    X(b1);
    X(b3);
} deriving gate

procedure add12(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;

    // set b = |12>
    X(b3);
    X(b2);

    adder4(a0, a1, a2, a3, b0, b1, b2, b3);

    X(b3);
    X(b2);
} deriving gate

procedure add13(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;

    // set b = |13>
    X(b0);
    X(b2);
    X(b3);

    adder4(a0, a1, a2, a3, b0, b1, b2, b3);

    X(b0);
    X(b2);
    X(b3);
} deriving gate

procedure add14(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;

    // set b = |14>
    X(b3);
    X(b1);
    X(b2);

    adder4(a0, a1, a2, a3, b0, b1, b2, b3);

    X(b3);
    X(b1);
    X(b2);
} deriving gate

procedure add15(qbit a0, qbit a1, qbit a2, qbit a3) {
    qbit b0, b1, b2, b3;

    // set b = |15>
    X(b0);
    X(b1);
    X(b2);
    X(b3);

    adder4(a0, a1, a2, a3, b0, b1, b2, b3);

    X(b0);
    X(b1);
    X(b2);
    X(b3);
} deriving gate

