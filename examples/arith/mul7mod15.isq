package arith;

import std;
import arith.add7mod15;
import arith.add11mod15;
import arith.add14mod15;
import arith.add13mod15;

procedure mul7mod15(qbit a3, qbit a2, qbit a1, qbit a0, qbit b3, qbit b2, qbit b1, qbit b0) {
    ctrl add7mod15(a0, b0, b1, b2, b3);
    ctrl add14mod15(a1, b0, b1, b2, b3);
    ctrl add13mod15(a2, b0, b1, b2, b3);
    ctrl add11mod15(a3, b0, b1, b2, b3);
} deriving gate

procedure mul13mod15(qbit a3, qbit a2, qbit a1, qbit a0, qbit b3, qbit b2, qbit b1, qbit b0) {
    ctrl add13mod15(a0, b0, b1, b2, b3);
    ctrl add11mod15(a1, b0, b1, b2, b3);
    ctrl add7mod15(a2, b0, b1, b2, b3);
    ctrl add14mod15(a3, b0, b1, b2, b3);
} deriving gate

procedure swap4(qbit a0, qbit a1, qbit a2, qbit a3, qbit b0, qbit b1, qbit b2, qbit b3) {
    SWAP(a0, b0);
    SWAP(a1, b1);
    SWAP(a2, b2);
    SWAP(a3, b3);
} deriving gate

procedure mul7mod15_u(qbit a3, qbit a2, qbit a1, qbit a0) {
    qbit anc[4];
    mul7mod15(a3, a2, a1, a0, anc[3], anc[2], anc[1], anc[0]);
    swap4(a3, a2, a1, a0, anc[3], anc[2], anc[1], anc[0]);
    inv mul13mod15(a3, a2, a1, a0, anc[3], anc[2], anc[1], anc[0]);
} deriving gate

procedure main()
{
    qbit a[4];
    for i in 0:16 {
        set(a, i);
        mul7mod15_u(a[3], a[2], a[1], a[0]);
        print M(a);
        inv mul7mod15_u(a[3], a[2], a[1], a[0]);
        set(a, i);
        print M(a);
    }
}
