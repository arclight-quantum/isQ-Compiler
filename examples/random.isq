import std;

int AbsI(int x)
{
    if (x >= 0) { return x; }
    else { return - x; }
}

int PowI(int x, int pow)
{
    int ret = 1;
    for i in 0 : pow
    {
        ret = ret * x;
    }
    return ret;
}

int NBinaryBits(int number)
{
    int tn = AbsI(number);
    int r = 0;
    while (tn > 0)
    {
        tn = tn / 2;
        r = r + 1;
    }
    return r;
}

int Random01()
{
    qbit q;
    q = |0>;
    H<q>;
    return M<q>;
}

int Random(int bound)
{
    if (bound == 0) { return 0; };
    int Nbits = NBinaryBits(bound);
    int ret = bound;

    while (ret >= bound)
    {
        int temp = 0;
        for i in 0 : Nbits
        {   
            int val = Random01();
            temp = temp + PowI(2, i) * Random01();
        }
        ret = temp;
    }
    return ret;
}

procedure main()
{
    for i in 0 : 100
    {
        int p = Random(100);
        print p;
    }
}
