-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ISQv2Parser.y
-----------------------------------------------------------------------------


rule 42 is unused
rule 43 is unused

terminal const is unused
terminal '&&' is unused
terminal '||' is unused
terminal '.' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_isqv2 -> TopLevel                           (0)
	TopLevel ->                                        (1)
	TopLevel -> TopLevel TopLevelMember                (2)
	StatementListMaybe -> StatementListMaybe Statement   (3)
	StatementListMaybe ->                              (4)
	StatementList -> StatementListMaybe                (5)
	Expr -> Expr1                                      (6)
	Expr -> Expr2                                      (7)
	ExprCallable -> '(' Expr ')'                       (8)
	ExprCallable -> IDENTIFIER                         (9)
	Expr1Left -> ExprCallable                          (10)
	Expr1Left -> Expr1Left '[' Expr ']'                (11)
	Expr1 -> Expr1Left                                 (12)
	Expr1 -> Expr1 '+' Expr1                           (13)
	Expr1 -> Expr1 '-' Expr1                           (14)
	Expr1 -> Expr1 '*' Expr1                           (15)
	Expr1 -> Expr1 '/' Expr1                           (16)
	Expr1 -> Expr1 '==' Expr1                          (17)
	Expr1 -> Expr1 '!=' Expr1                          (18)
	Expr1 -> Expr1 '>' Expr1                           (19)
	Expr1 -> Expr1 '<' Expr1                           (20)
	Expr1 -> Expr1 '>=' Expr1                          (21)
	Expr1 -> Expr1 '<=' Expr1                          (22)
	Expr1 -> '-' Expr1                                 (23)
	Expr1 -> '+' Expr1                                 (24)
	Expr1 -> NATURAL                                   (25)
	Expr1 -> FLOAT                                     (26)
	Expr1 -> IMAGPART                                  (27)
	Expr1 -> CallExpr                                  (28)
	Expr1 -> '[' Expr1List ']'                         (29)
	Expr1 -> true                                      (30)
	Expr1 -> false                                     (31)
	Expr1 -> ISQCore_MeasureExpr                       (32)
	CallExpr -> ExprCallable '(' Expr1List ')'         (33)
	MaybeExpr1 -> Expr1                                (34)
	MaybeExpr1 ->                                      (35)
	RangeExpr -> MaybeExpr1 ':' MaybeExpr1 ':' MaybeExpr1   (36)
	RangeExpr -> MaybeExpr1 ':' MaybeExpr1             (37)
	Expr2 -> RangeExpr                                 (38)
	Expr1List -> Expr1                                 (39)
	Expr1List -> Expr1List ',' Expr1                   (40)
	Expr1List ->                                       (41)
	Expr1ListNonEmpty -> Expr1                         (42)
	Expr1ListNonEmpty -> Expr1ListNonEmpty ',' Expr1   (43)
	Expr1LeftListNonEmpty -> Expr1Left                 (44)
	Expr1LeftListNonEmpty -> Expr1LeftListNonEmpty ',' Expr1Left   (45)
	IdentListNonEmpty -> IDENTIFIER                    (46)
	IdentListNonEmpty -> IdentListNonEmpty ',' IDENTIFIER   (47)
	ForStatement -> for IDENTIFIER in RangeExpr '{' StatementList '}'   (48)
	WhileStatement -> while Expr '{' StatementList '}'   (49)
	IfStatement -> if Expr '{' StatementList '}'       (50)
	IfStatement -> if Expr '{' StatementList '}' else '{' StatementList '}'   (51)
	PassStatement -> pass                              (52)
	DefvarStatement -> LetStyleDef                     (53)
	DefvarStatement -> ISQCore_CStyleVarDef            (54)
	LetStyleDef -> let IdentListNonEmpty ':' Type      (55)
	CallStatement -> CallExpr                          (56)
	AssignStatement -> Expr1Left '=' Expr              (57)
	ReturnStatement -> return Expr                     (58)
	ISQCore_GatedefMatrix -> '[' ISQCore_GatedefMatrixContent ']'   (59)
	ISQCore_GatedefMatrixContent -> ISQCore_GatedefMatrixRow   (60)
	ISQCore_GatedefMatrixContent -> ISQCore_GatedefMatrixContent ';' ISQCore_GatedefMatrixRow   (61)
	ISQCore_GatedefMatrixRow -> Expr1                  (62)
	ISQCore_GatedefMatrixRow -> ISQCore_GatedefMatrixRow ',' Expr1   (63)
	ISQCore_GatedefStatement -> defgate IDENTIFIER '=' ISQCore_GatedefMatrix   (64)
	GateModifier -> inv                                (65)
	GateModifier -> ctrl '<' NATURAL '>'               (66)
	GateModifier -> nctrl '<' NATURAL '>'              (67)
	GateModifier -> ctrl                               (68)
	GateModifier -> nctrl                              (69)
	GateModifierListNonEmpty -> GateModifierListNonEmpty GateModifier   (70)
	GateModifierListNonEmpty -> GateModifier           (71)
	ISQCore_UnitaryStatement -> ExprCallable '<' Expr1LeftListNonEmpty '>'   (72)
	ISQCore_UnitaryStatement -> GateModifierListNonEmpty ExprCallable '<' Expr1LeftListNonEmpty '>'   (73)
	ISQCore_MeasureExpr -> M '<' Expr1Left '>'         (74)
	ISQCore_MeasureExpr -> M '(' Expr1Left ')'         (75)
	ISQCore_MeasureStatement -> ISQCore_MeasureExpr    (76)
	ISQCore_ResetStatement -> Expr1Left '=' '|0>'      (77)
	ISQCore_PrintStatement -> print Expr               (78)
	StatementNonEmpty -> PassStatement ';'             (79)
	StatementNonEmpty -> IfStatement                   (80)
	StatementNonEmpty -> ForStatement                  (81)
	StatementNonEmpty -> WhileStatement                (82)
	StatementNonEmpty -> DefvarStatement ';'           (83)
	StatementNonEmpty -> CallStatement ';'             (84)
	StatementNonEmpty -> AssignStatement ';'           (85)
	StatementNonEmpty -> ReturnStatement ';'           (86)
	StatementNonEmpty -> ISQCore_UnitaryStatement ';'   (87)
	StatementNonEmpty -> ISQCore_MeasureStatement ';'   (88)
	StatementNonEmpty -> ISQCore_ResetStatement ';'    (89)
	StatementNonEmpty -> ISQCore_PrintStatement ';'    (90)
	Statement -> StatementNonEmpty                     (91)
	Statement -> ';'                                   (92)
	ArrayTypeDecorator -> '[' ']'                      (93)
	ArrayTypeDecorator -> '[' NATURAL ']'              (94)
	Type -> SimpleType                                 (95)
	Type -> CompositeType                              (96)
	SimpleType -> int                                  (97)
	SimpleType -> qbit                                 (98)
	SimpleType -> bool                                 (99)
	SimpleType -> unit                                 (100)
	CompositeType -> Type ArrayTypeDecorator           (101)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER             (102)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER ArrayTypeDecorator   (103)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER '=' Expr    (104)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER ArrayTypeDecorator '=' Expr   (105)
	ISQCore_CStyleVarDefList -> ISQCore_CStyleVarDefTerm   (106)
	ISQCore_CStyleVarDefList -> ISQCore_CStyleVarDefList ',' ISQCore_CStyleVarDefTerm   (107)
	ISQCore_CStyleVarDef -> SimpleType ISQCore_CStyleVarDefList   (108)
	ProcedureArgListNonEmpty -> ProcedureArg           (109)
	ProcedureArgListNonEmpty -> ProcedureArgListNonEmpty ',' ProcedureArg   (110)
	ProcedureArgList -> ProcedureArgListNonEmpty       (111)
	ProcedureArgList ->                                (112)
	ProcedureArg -> SimpleType IDENTIFIER              (113)
	ProcedureArg -> ISQCore_CStyleArrayArg             (114)
	ProcedureArg -> IDENTIFIER ':' Type                (115)
	ISQCore_CStyleArrayArg -> SimpleType IDENTIFIER ArrayTypeDecorator   (116)
	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '{' StatementList '}'   (117)
	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '->' Type '{' StatementList '}'   (118)
	Procedure -> SimpleType IDENTIFIER '(' ProcedureArgList ')' '{' StatementList '}'   (119)
	TopLevelVar -> DefvarStatement ';'                 (120)
	TopLevelMember -> Procedure                        (121)
	TopLevelMember -> ISQCore_GatedefStatement ';'     (122)
	TopLevelMember -> TopLevelVar                      (123)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	if             { TokenReservedId $$ "if" }
	else           { TokenReservedId $$ "else" }
	for            { TokenReservedId $$ "for" }
	in             { TokenReservedId $$ "in" }
	while          { TokenReservedId $$ "while" }
	procedure      { TokenReservedId $$ "procedure" }
	int            { TokenReservedId $$ "int" }
	qbit           { TokenReservedId $$ "qbit" }
	M              { TokenReservedId $$ "M" }
	print          { TokenReservedId $$ "print" }
	defgate        { TokenReservedId $$ "defgate" }
	pass           { TokenReservedId $$ "pass" }
	return         { TokenReservedId $$ "return" }
	ctrl           { TokenReservedId $$ "ctrl" }
	nctrl          { TokenReservedId $$ "nctrl" }
	inv            { TokenReservedId $$ "inv" }
	bool           { TokenReservedId $$ "bool" }
	true           { TokenReservedId $$ "true" }
	false          { TokenReservedId $$ "false" }
	let            { TokenReservedId $$ "let" }
	const          { TokenReservedId $$ "const" }
	unit           { TokenReservedId $$ "unit" }
	'|0>'          { TokenReservedOp $$ "|0>" }
	'='            { TokenReservedOp $$ "=" }
	'=='           { TokenReservedOp $$ "==" }
	'+'            { TokenReservedOp $$ "+" }
	'-'            { TokenReservedOp $$ "-" }
	'*'            { TokenReservedOp $$ "*" }
	'/'            { TokenReservedOp $$ "/" }
	'<'            { TokenReservedOp $$ "<" }
	'>'            { TokenReservedOp $$ ">" }
	'<='           { TokenReservedOp $$ "<=" }
	'>='           { TokenReservedOp $$ ">=" }
	'!='           { TokenReservedOp $$ "!=" }
	'&&'           { TokenReservedOp $$ "&&" }
	'||'           { TokenReservedOp $$ "||" }
	','            { TokenReservedOp $$ "," }
	';'            { TokenReservedOp $$ ";" }
	'('            { TokenReservedOp $$ "(" }
	')'            { TokenReservedOp $$ ")" }
	'['            { TokenReservedOp $$ "[" }
	']'            { TokenReservedOp $$ "]" }
	'{'            { TokenReservedOp $$ "{" }
	'}'            { TokenReservedOp $$ "}" }
	':'            { TokenReservedOp $$ ":" }
	'->'           { TokenReservedOp $$ "->" }
	'.'            { TokenReservedOp $$ "." }
	NATURAL        { TokenNatural _ _ }
	FLOAT          { TokenFloat _ _ }
	IMAGPART       { TokenImagPart _ _ }
	IDENTIFIER     { TokenIdent _ _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_isqv2    rule  0
	TopLevel        rules 1, 2
	StatementListMaybe rules 3, 4
	StatementList   rule  5
	Expr            rules 6, 7
	ExprCallable    rules 8, 9
	Expr1Left       rules 10, 11
	Expr1           rules 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
	CallExpr        rule  33
	MaybeExpr1      rules 34, 35
	RangeExpr       rules 36, 37
	Expr2           rule  38
	Expr1List       rules 39, 40, 41
	Expr1ListNonEmpty rules 42, 43
	Expr1LeftListNonEmpty rules 44, 45
	IdentListNonEmpty rules 46, 47
	ForStatement    rule  48
	WhileStatement  rule  49
	IfStatement     rules 50, 51
	PassStatement   rule  52
	DefvarStatement rules 53, 54
	LetStyleDef     rule  55
	CallStatement   rule  56
	AssignStatement rule  57
	ReturnStatement rule  58
	ISQCore_GatedefMatrix rule  59
	ISQCore_GatedefMatrixContent rules 60, 61
	ISQCore_GatedefMatrixRow rules 62, 63
	ISQCore_GatedefStatement rule  64
	GateModifier    rules 65, 66, 67, 68, 69
	GateModifierListNonEmpty rules 70, 71
	ISQCore_UnitaryStatement rules 72, 73
	ISQCore_MeasureExpr rules 74, 75
	ISQCore_MeasureStatement rule  76
	ISQCore_ResetStatement rule  77
	ISQCore_PrintStatement rule  78
	StatementNonEmpty rules 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90
	Statement       rules 91, 92
	ArrayTypeDecorator rules 93, 94
	Type            rules 95, 96
	SimpleType      rules 97, 98, 99, 100
	CompositeType   rule  101
	ISQCore_CStyleVarDefTerm rules 102, 103, 104, 105
	ISQCore_CStyleVarDefList rules 106, 107
	ISQCore_CStyleVarDef rule  108
	ProcedureArgListNonEmpty rules 109, 110
	ProcedureArgList rules 111, 112
	ProcedureArg    rules 113, 114, 115
	ISQCore_CStyleArrayArg rule  116
	Procedure       rules 117, 118, 119
	TopLevelVar     rule  120
	TopLevelMember  rules 121, 122, 123

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_isqv2 -> . TopLevel                          (rule 0)

	procedure      reduce using rule 1
	int            reduce using rule 1
	qbit           reduce using rule 1
	defgate        reduce using rule 1
	bool           reduce using rule 1
	let            reduce using rule 1
	unit           reduce using rule 1
	%eof           reduce using rule 1

	TopLevel       goto state 2

State 1

	TopLevel -> .                                       (rule 1)



State 2

	%start_isqv2 -> TopLevel .                          (rule 0)
	TopLevel -> TopLevel . TopLevelMember               (rule 2)

	procedure      shift, and enter state 11
	int            shift, and enter state 12
	qbit           shift, and enter state 13
	defgate        shift, and enter state 14
	bool           shift, and enter state 15
	let            shift, and enter state 16
	unit           shift, and enter state 17
	%eof           accept

	DefvarStatementgoto state 3
	LetStyleDef    goto state 4
	ISQCore_GatedefStatementgoto state 5
	SimpleType     goto state 6
	ISQCore_CStyleVarDefgoto state 7
	Procedure      goto state 8
	TopLevelVar    goto state 9
	TopLevelMember goto state 10

State 3

	TopLevelVar -> DefvarStatement . ';'                (rule 120)

	';'            shift, and enter state 26


State 4

	DefvarStatement -> LetStyleDef .                    (rule 53)

	';'            reduce using rule 53


State 5

	TopLevelMember -> ISQCore_GatedefStatement . ';'    (rule 122)

	';'            shift, and enter state 25


State 6

	ISQCore_CStyleVarDef -> SimpleType . ISQCore_CStyleVarDefList    (rule 108)
	Procedure -> SimpleType . IDENTIFIER '(' ProcedureArgList ')' '{' StatementList '}'    (rule 119)

	IDENTIFIER     shift, and enter state 24

	ISQCore_CStyleVarDefTermgoto state 22
	ISQCore_CStyleVarDefListgoto state 23

State 7

	DefvarStatement -> ISQCore_CStyleVarDef .           (rule 54)

	';'            reduce using rule 54


State 8

	TopLevelMember -> Procedure .                       (rule 121)

	procedure      reduce using rule 121
	int            reduce using rule 121
	qbit           reduce using rule 121
	defgate        reduce using rule 121
	bool           reduce using rule 121
	let            reduce using rule 121
	unit           reduce using rule 121
	%eof           reduce using rule 121


State 9

	TopLevelMember -> TopLevelVar .                     (rule 123)

	procedure      reduce using rule 123
	int            reduce using rule 123
	qbit           reduce using rule 123
	defgate        reduce using rule 123
	bool           reduce using rule 123
	let            reduce using rule 123
	unit           reduce using rule 123
	%eof           reduce using rule 123


State 10

	TopLevel -> TopLevel TopLevelMember .               (rule 2)

	procedure      reduce using rule 2
	int            reduce using rule 2
	qbit           reduce using rule 2
	defgate        reduce using rule 2
	bool           reduce using rule 2
	let            reduce using rule 2
	unit           reduce using rule 2
	%eof           reduce using rule 2


State 11

	Procedure -> procedure . IDENTIFIER '(' ProcedureArgList ')' '{' StatementList '}'    (rule 117)
	Procedure -> procedure . IDENTIFIER '(' ProcedureArgList ')' '->' Type '{' StatementList '}'    (rule 118)

	IDENTIFIER     shift, and enter state 21


State 12

	SimpleType -> int .                                 (rule 97)

	','            reduce using rule 97
	';'            reduce using rule 97
	')'            reduce using rule 97
	'['            reduce using rule 97
	'{'            reduce using rule 97
	IDENTIFIER     reduce using rule 97


State 13

	SimpleType -> qbit .                                (rule 98)

	','            reduce using rule 98
	';'            reduce using rule 98
	')'            reduce using rule 98
	'['            reduce using rule 98
	'{'            reduce using rule 98
	IDENTIFIER     reduce using rule 98


State 14

	ISQCore_GatedefStatement -> defgate . IDENTIFIER '=' ISQCore_GatedefMatrix    (rule 64)

	IDENTIFIER     shift, and enter state 20


State 15

	SimpleType -> bool .                                (rule 99)

	','            reduce using rule 99
	';'            reduce using rule 99
	')'            reduce using rule 99
	'['            reduce using rule 99
	'{'            reduce using rule 99
	IDENTIFIER     reduce using rule 99


State 16

	LetStyleDef -> let . IdentListNonEmpty ':' Type     (rule 55)

	IDENTIFIER     shift, and enter state 19

	IdentListNonEmptygoto state 18

State 17

	SimpleType -> unit .                                (rule 100)

	','            reduce using rule 100
	';'            reduce using rule 100
	')'            reduce using rule 100
	'['            reduce using rule 100
	'{'            reduce using rule 100
	IDENTIFIER     reduce using rule 100


State 18

	IdentListNonEmpty -> IdentListNonEmpty . ',' IDENTIFIER    (rule 47)
	LetStyleDef -> let IdentListNonEmpty . ':' Type     (rule 55)

	','            shift, and enter state 34
	':'            shift, and enter state 35


State 19

	IdentListNonEmpty -> IDENTIFIER .                   (rule 46)

	','            reduce using rule 46
	':'            reduce using rule 46


State 20

	ISQCore_GatedefStatement -> defgate IDENTIFIER . '=' ISQCore_GatedefMatrix    (rule 64)

	'='            shift, and enter state 33


State 21

	Procedure -> procedure IDENTIFIER . '(' ProcedureArgList ')' '{' StatementList '}'    (rule 117)
	Procedure -> procedure IDENTIFIER . '(' ProcedureArgList ')' '->' Type '{' StatementList '}'    (rule 118)

	'('            shift, and enter state 32


State 22

	ISQCore_CStyleVarDefList -> ISQCore_CStyleVarDefTerm .    (rule 106)

	','            reduce using rule 106
	';'            reduce using rule 106


State 23

	ISQCore_CStyleVarDefList -> ISQCore_CStyleVarDefList . ',' ISQCore_CStyleVarDefTerm    (rule 107)
	ISQCore_CStyleVarDef -> SimpleType ISQCore_CStyleVarDefList .    (rule 108)

	','            shift, and enter state 31
	';'            reduce using rule 108


State 24

	ISQCore_CStyleVarDefTerm -> IDENTIFIER .            (rule 102)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER . ArrayTypeDecorator    (rule 103)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER . '=' Expr    (rule 104)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER . ArrayTypeDecorator '=' Expr    (rule 105)
	Procedure -> SimpleType IDENTIFIER . '(' ProcedureArgList ')' '{' StatementList '}'    (rule 119)

	'='            shift, and enter state 28
	','            reduce using rule 102
	';'            reduce using rule 102
	'('            shift, and enter state 29
	'['            shift, and enter state 30

	ArrayTypeDecoratorgoto state 27

State 25

	TopLevelMember -> ISQCore_GatedefStatement ';' .    (rule 122)

	procedure      reduce using rule 122
	int            reduce using rule 122
	qbit           reduce using rule 122
	defgate        reduce using rule 122
	bool           reduce using rule 122
	let            reduce using rule 122
	unit           reduce using rule 122
	%eof           reduce using rule 122


State 26

	TopLevelVar -> DefvarStatement ';' .                (rule 120)

	procedure      reduce using rule 120
	int            reduce using rule 120
	qbit           reduce using rule 120
	defgate        reduce using rule 120
	bool           reduce using rule 120
	let            reduce using rule 120
	unit           reduce using rule 120
	%eof           reduce using rule 120


State 27

	ISQCore_CStyleVarDefTerm -> IDENTIFIER ArrayTypeDecorator .    (rule 103)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER ArrayTypeDecorator . '=' Expr    (rule 105)

	'='            shift, and enter state 73
	','            reduce using rule 103
	';'            reduce using rule 103


State 28

	ISQCore_CStyleVarDefTerm -> IDENTIFIER '=' . Expr    (rule 104)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 53
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 29

	Procedure -> SimpleType IDENTIFIER '(' . ProcedureArgList ')' '{' StatementList '}'    (rule 119)

	int            shift, and enter state 12
	qbit           shift, and enter state 13
	bool           shift, and enter state 15
	unit           shift, and enter state 17
	')'            reduce using rule 112
	IDENTIFIER     shift, and enter state 47

	SimpleType     goto state 42
	ProcedureArgListNonEmptygoto state 43
	ProcedureArgListgoto state 52
	ProcedureArg   goto state 45
	ISQCore_CStyleArrayArggoto state 46

State 30

	ArrayTypeDecorator -> '[' . ']'                     (rule 93)
	ArrayTypeDecorator -> '[' . NATURAL ']'             (rule 94)

	']'            shift, and enter state 50
	NATURAL        shift, and enter state 51


State 31

	ISQCore_CStyleVarDefList -> ISQCore_CStyleVarDefList ',' . ISQCore_CStyleVarDefTerm    (rule 107)

	IDENTIFIER     shift, and enter state 49

	ISQCore_CStyleVarDefTermgoto state 48

State 32

	Procedure -> procedure IDENTIFIER '(' . ProcedureArgList ')' '{' StatementList '}'    (rule 117)
	Procedure -> procedure IDENTIFIER '(' . ProcedureArgList ')' '->' Type '{' StatementList '}'    (rule 118)

	int            shift, and enter state 12
	qbit           shift, and enter state 13
	bool           shift, and enter state 15
	unit           shift, and enter state 17
	')'            reduce using rule 112
	IDENTIFIER     shift, and enter state 47

	SimpleType     goto state 42
	ProcedureArgListNonEmptygoto state 43
	ProcedureArgListgoto state 44
	ProcedureArg   goto state 45
	ISQCore_CStyleArrayArggoto state 46

State 33

	ISQCore_GatedefStatement -> defgate IDENTIFIER '=' . ISQCore_GatedefMatrix    (rule 64)

	'['            shift, and enter state 41

	ISQCore_GatedefMatrixgoto state 40

State 34

	IdentListNonEmpty -> IdentListNonEmpty ',' . IDENTIFIER    (rule 47)

	IDENTIFIER     shift, and enter state 39


State 35

	LetStyleDef -> let IdentListNonEmpty ':' . Type     (rule 55)

	int            shift, and enter state 12
	qbit           shift, and enter state 13
	bool           shift, and enter state 15
	unit           shift, and enter state 17

	Type           goto state 36
	SimpleType     goto state 37
	CompositeType  goto state 38

State 36

	LetStyleDef -> let IdentListNonEmpty ':' Type .     (rule 55)
	CompositeType -> Type . ArrayTypeDecorator          (rule 101)

	';'            reduce using rule 55
	'['            shift, and enter state 30

	ArrayTypeDecoratorgoto state 104

State 37

	Type -> SimpleType .                                (rule 95)

	','            reduce using rule 95
	';'            reduce using rule 95
	')'            reduce using rule 95
	'['            reduce using rule 95
	'{'            reduce using rule 95


State 38

	Type -> CompositeType .                             (rule 96)

	','            reduce using rule 96
	';'            reduce using rule 96
	')'            reduce using rule 96
	'['            reduce using rule 96
	'{'            reduce using rule 96


State 39

	IdentListNonEmpty -> IdentListNonEmpty ',' IDENTIFIER .    (rule 47)

	','            reduce using rule 47
	':'            reduce using rule 47


State 40

	ISQCore_GatedefStatement -> defgate IDENTIFIER '=' ISQCore_GatedefMatrix .    (rule 64)

	';'            reduce using rule 64


State 41

	ISQCore_GatedefMatrix -> '[' . ISQCore_GatedefMatrixContent ']'    (rule 59)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 101
	CallExpr       goto state 57
	ISQCore_GatedefMatrixContentgoto state 102
	ISQCore_GatedefMatrixRowgoto state 103
	ISQCore_MeasureExprgoto state 61

State 42

	ProcedureArg -> SimpleType . IDENTIFIER             (rule 113)
	ISQCore_CStyleArrayArg -> SimpleType . IDENTIFIER ArrayTypeDecorator    (rule 116)

	IDENTIFIER     shift, and enter state 100


State 43

	ProcedureArgListNonEmpty -> ProcedureArgListNonEmpty . ',' ProcedureArg    (rule 110)
	ProcedureArgList -> ProcedureArgListNonEmpty .      (rule 111)

	','            shift, and enter state 99
	')'            reduce using rule 111


State 44

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList . ')' '{' StatementList '}'    (rule 117)
	Procedure -> procedure IDENTIFIER '(' ProcedureArgList . ')' '->' Type '{' StatementList '}'    (rule 118)

	')'            shift, and enter state 98


State 45

	ProcedureArgListNonEmpty -> ProcedureArg .          (rule 109)

	','            reduce using rule 109
	')'            reduce using rule 109


State 46

	ProcedureArg -> ISQCore_CStyleArrayArg .            (rule 114)

	','            reduce using rule 114
	')'            reduce using rule 114


State 47

	ProcedureArg -> IDENTIFIER . ':' Type               (rule 115)

	':'            shift, and enter state 97


State 48

	ISQCore_CStyleVarDefList -> ISQCore_CStyleVarDefList ',' ISQCore_CStyleVarDefTerm .    (rule 107)

	','            reduce using rule 107
	';'            reduce using rule 107


State 49

	ISQCore_CStyleVarDefTerm -> IDENTIFIER .            (rule 102)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER . ArrayTypeDecorator    (rule 103)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER . '=' Expr    (rule 104)
	ISQCore_CStyleVarDefTerm -> IDENTIFIER . ArrayTypeDecorator '=' Expr    (rule 105)

	'='            shift, and enter state 28
	','            reduce using rule 102
	';'            reduce using rule 102
	'['            shift, and enter state 30

	ArrayTypeDecoratorgoto state 27

State 50

	ArrayTypeDecorator -> '[' ']' .                     (rule 93)

	'='            reduce using rule 93
	','            reduce using rule 93
	';'            reduce using rule 93
	')'            reduce using rule 93
	'['            reduce using rule 93
	'{'            reduce using rule 93


State 51

	ArrayTypeDecorator -> '[' NATURAL . ']'             (rule 94)

	']'            shift, and enter state 96


State 52

	Procedure -> SimpleType IDENTIFIER '(' ProcedureArgList . ')' '{' StatementList '}'    (rule 119)

	')'            shift, and enter state 95


State 53

	ISQCore_CStyleVarDefTerm -> IDENTIFIER '=' Expr .    (rule 104)

	','            reduce using rule 104
	';'            reduce using rule 104


State 54

	Expr1Left -> ExprCallable .                         (rule 10)
	CallExpr -> ExprCallable . '(' Expr1List ')'        (rule 33)

	'=='           reduce using rule 10
	'+'            reduce using rule 10
	'-'            reduce using rule 10
	'*'            reduce using rule 10
	'/'            reduce using rule 10
	'<'            reduce using rule 10
	'>'            reduce using rule 10
	'<='           reduce using rule 10
	'>='           reduce using rule 10
	'!='           reduce using rule 10
	','            reduce using rule 10
	';'            reduce using rule 10
	'('            shift, and enter state 94
	')'            reduce using rule 10
	'['            reduce using rule 10
	']'            reduce using rule 10
	'{'            reduce using rule 10
	':'            reduce using rule 10


State 55

	Expr1Left -> Expr1Left . '[' Expr ']'               (rule 11)
	Expr1 -> Expr1Left .                                (rule 12)

	'=='           reduce using rule 12
	'+'            reduce using rule 12
	'-'            reduce using rule 12
	'*'            reduce using rule 12
	'/'            reduce using rule 12
	'<'            reduce using rule 12
	'>'            reduce using rule 12
	'<='           reduce using rule 12
	'>='           reduce using rule 12
	'!='           reduce using rule 12
	','            reduce using rule 12
	';'            reduce using rule 12
	')'            reduce using rule 12
	'['            shift, and enter state 93
	']'            reduce using rule 12
	'{'            reduce using rule 12
	':'            reduce using rule 12


State 56

	Expr -> Expr1 .                                     (rule 6)
	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	MaybeExpr1 -> Expr1 .                               (rule 34)

	'=='           shift, and enter state 83
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            shift, and enter state 88
	'>'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>='           shift, and enter state 91
	'!='           shift, and enter state 92
	','            reduce using rule 6
	';'            reduce using rule 6
	')'            reduce using rule 6
	']'            reduce using rule 6
	'{'            reduce using rule 6
	':'            reduce using rule 34


State 57

	Expr1 -> CallExpr .                                 (rule 28)

	'=='           reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'<'            reduce using rule 28
	'>'            reduce using rule 28
	'<='           reduce using rule 28
	'>='           reduce using rule 28
	'!='           reduce using rule 28
	','            reduce using rule 28
	';'            reduce using rule 28
	')'            reduce using rule 28
	']'            reduce using rule 28
	'{'            reduce using rule 28
	':'            reduce using rule 28


State 58

	RangeExpr -> MaybeExpr1 . ':' MaybeExpr1 ':' MaybeExpr1    (rule 36)
	RangeExpr -> MaybeExpr1 . ':' MaybeExpr1            (rule 37)

	':'            shift, and enter state 82


State 59

	Expr2 -> RangeExpr .                                (rule 38)

	','            reduce using rule 38
	';'            reduce using rule 38
	')'            reduce using rule 38
	']'            reduce using rule 38
	'{'            reduce using rule 38


State 60

	Expr -> Expr2 .                                     (rule 7)

	','            reduce using rule 7
	';'            reduce using rule 7
	')'            reduce using rule 7
	']'            reduce using rule 7
	'{'            reduce using rule 7


State 61

	Expr1 -> ISQCore_MeasureExpr .                      (rule 32)

	'=='           reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'<='           reduce using rule 32
	'>='           reduce using rule 32
	'!='           reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	')'            reduce using rule 32
	']'            reduce using rule 32
	'{'            reduce using rule 32
	':'            reduce using rule 32


State 62

	ISQCore_MeasureExpr -> M . '<' Expr1Left '>'        (rule 74)
	ISQCore_MeasureExpr -> M . '(' Expr1Left ')'        (rule 75)

	'<'            shift, and enter state 80
	'('            shift, and enter state 81


State 63

	Expr1 -> true .                                     (rule 30)

	'=='           reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'<='           reduce using rule 30
	'>='           reduce using rule 30
	'!='           reduce using rule 30
	','            reduce using rule 30
	';'            reduce using rule 30
	')'            reduce using rule 30
	']'            reduce using rule 30
	'{'            reduce using rule 30
	':'            reduce using rule 30


State 64

	Expr1 -> false .                                    (rule 31)

	'=='           reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'<='           reduce using rule 31
	'>='           reduce using rule 31
	'!='           reduce using rule 31
	','            reduce using rule 31
	';'            reduce using rule 31
	')'            reduce using rule 31
	']'            reduce using rule 31
	'{'            reduce using rule 31
	':'            reduce using rule 31


State 65

	Expr1 -> '+' . Expr1                                (rule 24)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 79
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 66

	Expr1 -> '-' . Expr1                                (rule 23)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 78
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 67

	ExprCallable -> '(' . Expr ')'                      (rule 8)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 77
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 68

	Expr1 -> '[' . Expr1List ']'                        (rule 29)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	','            reduce using rule 41
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	']'            reduce using rule 41
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 75
	CallExpr       goto state 57
	Expr1List      goto state 76
	ISQCore_MeasureExprgoto state 61

State 69

	Expr1 -> NATURAL .                                  (rule 25)

	'=='           reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'<='           reduce using rule 25
	'>='           reduce using rule 25
	'!='           reduce using rule 25
	','            reduce using rule 25
	';'            reduce using rule 25
	')'            reduce using rule 25
	']'            reduce using rule 25
	'{'            reduce using rule 25
	':'            reduce using rule 25


State 70

	Expr1 -> FLOAT .                                    (rule 26)

	'=='           reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'<'            reduce using rule 26
	'>'            reduce using rule 26
	'<='           reduce using rule 26
	'>='           reduce using rule 26
	'!='           reduce using rule 26
	','            reduce using rule 26
	';'            reduce using rule 26
	')'            reduce using rule 26
	']'            reduce using rule 26
	'{'            reduce using rule 26
	':'            reduce using rule 26


State 71

	Expr1 -> IMAGPART .                                 (rule 27)

	'=='           reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'<'            reduce using rule 27
	'>'            reduce using rule 27
	'<='           reduce using rule 27
	'>='           reduce using rule 27
	'!='           reduce using rule 27
	','            reduce using rule 27
	';'            reduce using rule 27
	')'            reduce using rule 27
	']'            reduce using rule 27
	'{'            reduce using rule 27
	':'            reduce using rule 27


State 72

	ExprCallable -> IDENTIFIER .                        (rule 9)

	'='            reduce using rule 9
	'=='           reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	'<'            reduce using rule 9
	'>'            reduce using rule 9
	'<='           reduce using rule 9
	'>='           reduce using rule 9
	'!='           reduce using rule 9
	','            reduce using rule 9
	';'            reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	'{'            reduce using rule 9
	':'            reduce using rule 9


State 73

	ISQCore_CStyleVarDefTerm -> IDENTIFIER ArrayTypeDecorator '=' . Expr    (rule 105)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 74
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 74

	ISQCore_CStyleVarDefTerm -> IDENTIFIER ArrayTypeDecorator '=' Expr .    (rule 105)

	','            reduce using rule 105
	';'            reduce using rule 105


State 75

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	Expr1List -> Expr1 .                                (rule 39)

	'=='           shift, and enter state 83
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            shift, and enter state 88
	'>'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>='           shift, and enter state 91
	'!='           shift, and enter state 92
	','            reduce using rule 39
	')'            reduce using rule 39
	']'            reduce using rule 39


State 76

	Expr1 -> '[' Expr1List . ']'                        (rule 29)
	Expr1List -> Expr1List . ',' Expr1                  (rule 40)

	','            shift, and enter state 132
	']'            shift, and enter state 133


State 77

	ExprCallable -> '(' Expr . ')'                      (rule 8)

	')'            shift, and enter state 131


State 78

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	Expr1 -> '-' Expr1 .                                (rule 23)

	'=='           reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'<'            reduce using rule 23
	'>'            reduce using rule 23
	'<='           reduce using rule 23
	'>='           reduce using rule 23
	'!='           reduce using rule 23
	','            reduce using rule 23
	';'            reduce using rule 23
	')'            reduce using rule 23
	']'            reduce using rule 23
	'{'            reduce using rule 23
	':'            reduce using rule 23


State 79

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	Expr1 -> '+' Expr1 .                                (rule 24)

	'=='           reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'<'            reduce using rule 24
	'>'            reduce using rule 24
	'<='           reduce using rule 24
	'>='           reduce using rule 24
	'!='           reduce using rule 24
	','            reduce using rule 24
	';'            reduce using rule 24
	')'            reduce using rule 24
	']'            reduce using rule 24
	'{'            reduce using rule 24
	':'            reduce using rule 24


State 80

	ISQCore_MeasureExpr -> M '<' . Expr1Left '>'        (rule 74)

	'('            shift, and enter state 67
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 128
	Expr1Left      goto state 130

State 81

	ISQCore_MeasureExpr -> M '(' . Expr1Left ')'        (rule 75)

	'('            shift, and enter state 67
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 128
	Expr1Left      goto state 129

State 82

	RangeExpr -> MaybeExpr1 ':' . MaybeExpr1 ':' MaybeExpr1    (rule 36)
	RangeExpr -> MaybeExpr1 ':' . MaybeExpr1            (rule 37)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	','            reduce using rule 35
	';'            reduce using rule 35
	'('            shift, and enter state 67
	')'            reduce using rule 35
	'['            shift, and enter state 68
	']'            reduce using rule 35
	'{'            reduce using rule 35
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 126
	CallExpr       goto state 57
	MaybeExpr1     goto state 127
	ISQCore_MeasureExprgoto state 61

State 83

	Expr1 -> Expr1 '==' . Expr1                         (rule 17)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 125
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 84

	Expr1 -> Expr1 '+' . Expr1                          (rule 13)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 124
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 85

	Expr1 -> Expr1 '-' . Expr1                          (rule 14)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 123
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 86

	Expr1 -> Expr1 '*' . Expr1                          (rule 15)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 122
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 87

	Expr1 -> Expr1 '/' . Expr1                          (rule 16)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 121
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 88

	Expr1 -> Expr1 '<' . Expr1                          (rule 20)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 120
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 89

	Expr1 -> Expr1 '>' . Expr1                          (rule 19)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 119
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 90

	Expr1 -> Expr1 '<=' . Expr1                         (rule 22)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 118
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 91

	Expr1 -> Expr1 '>=' . Expr1                         (rule 21)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 117
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 92

	Expr1 -> Expr1 '!=' . Expr1                         (rule 18)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 116
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 93

	Expr1Left -> Expr1Left '[' . Expr ']'               (rule 11)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 115
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 94

	CallExpr -> ExprCallable '(' . Expr1List ')'        (rule 33)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	','            reduce using rule 41
	'('            shift, and enter state 67
	')'            reduce using rule 41
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 75
	CallExpr       goto state 57
	Expr1List      goto state 114
	ISQCore_MeasureExprgoto state 61

State 95

	Procedure -> SimpleType IDENTIFIER '(' ProcedureArgList ')' . '{' StatementList '}'    (rule 119)

	'{'            shift, and enter state 113


State 96

	ArrayTypeDecorator -> '[' NATURAL ']' .             (rule 94)

	'='            reduce using rule 94
	','            reduce using rule 94
	';'            reduce using rule 94
	')'            reduce using rule 94
	'['            reduce using rule 94
	'{'            reduce using rule 94


State 97

	ProcedureArg -> IDENTIFIER ':' . Type               (rule 115)

	int            shift, and enter state 12
	qbit           shift, and enter state 13
	bool           shift, and enter state 15
	unit           shift, and enter state 17

	Type           goto state 112
	SimpleType     goto state 37
	CompositeType  goto state 38

State 98

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' . '{' StatementList '}'    (rule 117)
	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' . '->' Type '{' StatementList '}'    (rule 118)

	'{'            shift, and enter state 110
	'->'           shift, and enter state 111


State 99

	ProcedureArgListNonEmpty -> ProcedureArgListNonEmpty ',' . ProcedureArg    (rule 110)

	int            shift, and enter state 12
	qbit           shift, and enter state 13
	bool           shift, and enter state 15
	unit           shift, and enter state 17
	IDENTIFIER     shift, and enter state 47

	SimpleType     goto state 42
	ProcedureArg   goto state 109
	ISQCore_CStyleArrayArggoto state 46

State 100

	ProcedureArg -> SimpleType IDENTIFIER .             (rule 113)
	ISQCore_CStyleArrayArg -> SimpleType IDENTIFIER . ArrayTypeDecorator    (rule 116)

	','            reduce using rule 113
	')'            reduce using rule 113
	'['            shift, and enter state 30

	ArrayTypeDecoratorgoto state 108

State 101

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	ISQCore_GatedefMatrixRow -> Expr1 .                 (rule 62)

	'=='           shift, and enter state 83
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            shift, and enter state 88
	'>'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>='           shift, and enter state 91
	'!='           shift, and enter state 92
	','            reduce using rule 62
	';'            reduce using rule 62
	']'            reduce using rule 62


State 102

	ISQCore_GatedefMatrix -> '[' ISQCore_GatedefMatrixContent . ']'    (rule 59)
	ISQCore_GatedefMatrixContent -> ISQCore_GatedefMatrixContent . ';' ISQCore_GatedefMatrixRow    (rule 61)

	';'            shift, and enter state 106
	']'            shift, and enter state 107


State 103

	ISQCore_GatedefMatrixContent -> ISQCore_GatedefMatrixRow .    (rule 60)
	ISQCore_GatedefMatrixRow -> ISQCore_GatedefMatrixRow . ',' Expr1    (rule 63)

	','            shift, and enter state 105
	';'            reduce using rule 60
	']'            reduce using rule 60


State 104

	CompositeType -> Type ArrayTypeDecorator .          (rule 101)

	','            reduce using rule 101
	';'            reduce using rule 101
	')'            reduce using rule 101
	'['            reduce using rule 101
	'{'            reduce using rule 101


State 105

	ISQCore_GatedefMatrixRow -> ISQCore_GatedefMatrixRow ',' . Expr1    (rule 63)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 145
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 106

	ISQCore_GatedefMatrixContent -> ISQCore_GatedefMatrixContent ';' . ISQCore_GatedefMatrixRow    (rule 61)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 101
	CallExpr       goto state 57
	ISQCore_GatedefMatrixRowgoto state 144
	ISQCore_MeasureExprgoto state 61

State 107

	ISQCore_GatedefMatrix -> '[' ISQCore_GatedefMatrixContent ']' .    (rule 59)

	';'            reduce using rule 59


State 108

	ISQCore_CStyleArrayArg -> SimpleType IDENTIFIER ArrayTypeDecorator .    (rule 116)

	','            reduce using rule 116
	')'            reduce using rule 116


State 109

	ProcedureArgListNonEmpty -> ProcedureArgListNonEmpty ',' ProcedureArg .    (rule 110)

	','            reduce using rule 110
	')'            reduce using rule 110


State 110

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '{' . StatementList '}'    (rule 117)

	if             reduce using rule 4
	for            reduce using rule 4
	while          reduce using rule 4
	int            reduce using rule 4
	qbit           reduce using rule 4
	M              reduce using rule 4
	print          reduce using rule 4
	pass           reduce using rule 4
	return         reduce using rule 4
	ctrl           reduce using rule 4
	nctrl          reduce using rule 4
	inv            reduce using rule 4
	bool           reduce using rule 4
	let            reduce using rule 4
	unit           reduce using rule 4
	';'            reduce using rule 4
	'('            reduce using rule 4
	'}'            reduce using rule 4
	IDENTIFIER     reduce using rule 4

	StatementListMaybegoto state 140
	StatementList  goto state 143

State 111

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '->' . Type '{' StatementList '}'    (rule 118)

	int            shift, and enter state 12
	qbit           shift, and enter state 13
	bool           shift, and enter state 15
	unit           shift, and enter state 17

	Type           goto state 142
	SimpleType     goto state 37
	CompositeType  goto state 38

State 112

	CompositeType -> Type . ArrayTypeDecorator          (rule 101)
	ProcedureArg -> IDENTIFIER ':' Type .               (rule 115)

	','            reduce using rule 115
	')'            reduce using rule 115
	'['            shift, and enter state 30

	ArrayTypeDecoratorgoto state 104

State 113

	Procedure -> SimpleType IDENTIFIER '(' ProcedureArgList ')' '{' . StatementList '}'    (rule 119)

	if             reduce using rule 4
	for            reduce using rule 4
	while          reduce using rule 4
	int            reduce using rule 4
	qbit           reduce using rule 4
	M              reduce using rule 4
	print          reduce using rule 4
	pass           reduce using rule 4
	return         reduce using rule 4
	ctrl           reduce using rule 4
	nctrl          reduce using rule 4
	inv            reduce using rule 4
	bool           reduce using rule 4
	let            reduce using rule 4
	unit           reduce using rule 4
	';'            reduce using rule 4
	'('            reduce using rule 4
	'}'            reduce using rule 4
	IDENTIFIER     reduce using rule 4

	StatementListMaybegoto state 140
	StatementList  goto state 141

State 114

	CallExpr -> ExprCallable '(' Expr1List . ')'        (rule 33)
	Expr1List -> Expr1List . ',' Expr1                  (rule 40)

	','            shift, and enter state 132
	')'            shift, and enter state 139


State 115

	Expr1Left -> Expr1Left '[' Expr . ']'               (rule 11)

	']'            shift, and enter state 138


State 116

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 '!=' Expr1 .                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 18
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            shift, and enter state 88
	'>'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>='           shift, and enter state 91
	'!='           reduce using rule 18
	','            reduce using rule 18
	';'            reduce using rule 18
	')'            reduce using rule 18
	']'            reduce using rule 18
	'{'            reduce using rule 18
	':'            reduce using rule 18


State 117

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 '>=' Expr1 .                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 21
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'!='           reduce using rule 21
	','            reduce using rule 21
	';'            reduce using rule 21
	')'            reduce using rule 21
	']'            reduce using rule 21
	'{'            reduce using rule 21
	':'            reduce using rule 21


State 118

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	Expr1 -> Expr1 '<=' Expr1 .                         (rule 22)

	'=='           reduce using rule 22
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'!='           reduce using rule 22
	','            reduce using rule 22
	';'            reduce using rule 22
	')'            reduce using rule 22
	']'            reduce using rule 22
	'{'            reduce using rule 22
	':'            reduce using rule 22


State 119

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 '>' Expr1 .                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 19
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'!='           reduce using rule 19
	','            reduce using rule 19
	';'            reduce using rule 19
	')'            reduce using rule 19
	']'            reduce using rule 19
	'{'            reduce using rule 19
	':'            reduce using rule 19


State 120

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 '<' Expr1 .                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 20
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'!='           reduce using rule 20
	','            reduce using rule 20
	';'            reduce using rule 20
	')'            reduce using rule 20
	']'            reduce using rule 20
	'{'            reduce using rule 20
	':'            reduce using rule 20


State 121

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 '/' Expr1 .                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'<'            reduce using rule 16
	'>'            reduce using rule 16
	'<='           reduce using rule 16
	'>='           reduce using rule 16
	'!='           reduce using rule 16
	','            reduce using rule 16
	';'            reduce using rule 16
	')'            reduce using rule 16
	']'            reduce using rule 16
	'{'            reduce using rule 16
	':'            reduce using rule 16


State 122

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 '*' Expr1 .                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 15
	'+'            reduce using rule 15
	'-'            reduce using rule 15
	'*'            reduce using rule 15
	'/'            reduce using rule 15
	'<'            reduce using rule 15
	'>'            reduce using rule 15
	'<='           reduce using rule 15
	'>='           reduce using rule 15
	'!='           reduce using rule 15
	','            reduce using rule 15
	';'            reduce using rule 15
	')'            reduce using rule 15
	']'            reduce using rule 15
	'{'            reduce using rule 15
	':'            reduce using rule 15


State 123

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 '-' Expr1 .                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 14
	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            reduce using rule 14
	'>'            reduce using rule 14
	'<='           reduce using rule 14
	'>='           reduce using rule 14
	'!='           reduce using rule 14
	','            reduce using rule 14
	';'            reduce using rule 14
	')'            reduce using rule 14
	']'            reduce using rule 14
	'{'            reduce using rule 14
	':'            reduce using rule 14


State 124

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 '+' Expr1 .                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            reduce using rule 13
	'>'            reduce using rule 13
	'<='           reduce using rule 13
	'>='           reduce using rule 13
	'!='           reduce using rule 13
	','            reduce using rule 13
	';'            reduce using rule 13
	')'            reduce using rule 13
	']'            reduce using rule 13
	'{'            reduce using rule 13
	':'            reduce using rule 13


State 125

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 '==' Expr1 .                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)

	'=='           reduce using rule 17
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            shift, and enter state 88
	'>'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>='           shift, and enter state 91
	'!='           reduce using rule 17
	','            reduce using rule 17
	';'            reduce using rule 17
	')'            reduce using rule 17
	']'            reduce using rule 17
	'{'            reduce using rule 17
	':'            reduce using rule 17


State 126

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	MaybeExpr1 -> Expr1 .                               (rule 34)

	'=='           shift, and enter state 83
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            shift, and enter state 88
	'>'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>='           shift, and enter state 91
	'!='           shift, and enter state 92
	','            reduce using rule 34
	';'            reduce using rule 34
	')'            reduce using rule 34
	']'            reduce using rule 34
	'{'            reduce using rule 34
	':'            reduce using rule 34


State 127

	RangeExpr -> MaybeExpr1 ':' MaybeExpr1 . ':' MaybeExpr1    (rule 36)
	RangeExpr -> MaybeExpr1 ':' MaybeExpr1 .            (rule 37)

	','            reduce using rule 37
	';'            reduce using rule 37
	')'            reduce using rule 37
	']'            reduce using rule 37
	'{'            reduce using rule 37
	':'            shift, and enter state 137


State 128

	Expr1Left -> ExprCallable .                         (rule 10)

	'>'            reduce using rule 10
	','            reduce using rule 10
	')'            reduce using rule 10
	'['            reduce using rule 10


State 129

	Expr1Left -> Expr1Left . '[' Expr ']'               (rule 11)
	ISQCore_MeasureExpr -> M '(' Expr1Left . ')'        (rule 75)

	')'            shift, and enter state 136
	'['            shift, and enter state 93


State 130

	Expr1Left -> Expr1Left . '[' Expr ']'               (rule 11)
	ISQCore_MeasureExpr -> M '<' Expr1Left . '>'        (rule 74)

	'>'            shift, and enter state 135
	'['            shift, and enter state 93


State 131

	ExprCallable -> '(' Expr ')' .                      (rule 8)

	'='            reduce using rule 8
	'=='           reduce using rule 8
	'+'            reduce using rule 8
	'-'            reduce using rule 8
	'*'            reduce using rule 8
	'/'            reduce using rule 8
	'<'            reduce using rule 8
	'>'            reduce using rule 8
	'<='           reduce using rule 8
	'>='           reduce using rule 8
	'!='           reduce using rule 8
	','            reduce using rule 8
	';'            reduce using rule 8
	'('            reduce using rule 8
	')'            reduce using rule 8
	'['            reduce using rule 8
	']'            reduce using rule 8
	'{'            reduce using rule 8
	':'            reduce using rule 8


State 132

	Expr1List -> Expr1List ',' . Expr1                  (rule 40)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 134
	CallExpr       goto state 57
	ISQCore_MeasureExprgoto state 61

State 133

	Expr1 -> '[' Expr1List ']' .                        (rule 29)

	'=='           reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'<'            reduce using rule 29
	'>'            reduce using rule 29
	'<='           reduce using rule 29
	'>='           reduce using rule 29
	'!='           reduce using rule 29
	','            reduce using rule 29
	';'            reduce using rule 29
	')'            reduce using rule 29
	']'            reduce using rule 29
	'{'            reduce using rule 29
	':'            reduce using rule 29


State 134

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	Expr1List -> Expr1List ',' Expr1 .                  (rule 40)

	'=='           shift, and enter state 83
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            shift, and enter state 88
	'>'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>='           shift, and enter state 91
	'!='           shift, and enter state 92
	','            reduce using rule 40
	')'            reduce using rule 40
	']'            reduce using rule 40


State 135

	ISQCore_MeasureExpr -> M '<' Expr1Left '>' .        (rule 74)

	'=='           reduce using rule 74
	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	'<'            reduce using rule 74
	'>'            reduce using rule 74
	'<='           reduce using rule 74
	'>='           reduce using rule 74
	'!='           reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74
	')'            reduce using rule 74
	']'            reduce using rule 74
	'{'            reduce using rule 74
	':'            reduce using rule 74


State 136

	ISQCore_MeasureExpr -> M '(' Expr1Left ')' .        (rule 75)

	'=='           reduce using rule 75
	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	'<'            reduce using rule 75
	'>'            reduce using rule 75
	'<='           reduce using rule 75
	'>='           reduce using rule 75
	'!='           reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	')'            reduce using rule 75
	']'            reduce using rule 75
	'{'            reduce using rule 75
	':'            reduce using rule 75


State 137

	RangeExpr -> MaybeExpr1 ':' MaybeExpr1 ':' . MaybeExpr1    (rule 36)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	','            reduce using rule 35
	';'            reduce using rule 35
	'('            shift, and enter state 67
	')'            reduce using rule 35
	'['            shift, and enter state 68
	']'            reduce using rule 35
	'{'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 126
	CallExpr       goto state 57
	MaybeExpr1     goto state 180
	ISQCore_MeasureExprgoto state 61

State 138

	Expr1Left -> Expr1Left '[' Expr ']' .               (rule 11)

	'='            reduce using rule 11
	'=='           reduce using rule 11
	'+'            reduce using rule 11
	'-'            reduce using rule 11
	'*'            reduce using rule 11
	'/'            reduce using rule 11
	'<'            reduce using rule 11
	'>'            reduce using rule 11
	'<='           reduce using rule 11
	'>='           reduce using rule 11
	'!='           reduce using rule 11
	','            reduce using rule 11
	';'            reduce using rule 11
	')'            reduce using rule 11
	'['            reduce using rule 11
	']'            reduce using rule 11
	'{'            reduce using rule 11
	':'            reduce using rule 11


State 139

	CallExpr -> ExprCallable '(' Expr1List ')' .        (rule 33)

	'=='           reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'<'            reduce using rule 33
	'>'            reduce using rule 33
	'<='           reduce using rule 33
	'>='           reduce using rule 33
	'!='           reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	')'            reduce using rule 33
	']'            reduce using rule 33
	'{'            reduce using rule 33
	':'            reduce using rule 33


State 140

	StatementListMaybe -> StatementListMaybe . Statement    (rule 3)
	StatementList -> StatementListMaybe .               (rule 5)

	if             shift, and enter state 170
	for            shift, and enter state 171
	while          shift, and enter state 172
	int            shift, and enter state 12
	qbit           shift, and enter state 13
	M              shift, and enter state 62
	print          shift, and enter state 173
	pass           shift, and enter state 174
	return         shift, and enter state 175
	ctrl           shift, and enter state 176
	nctrl          shift, and enter state 177
	inv            shift, and enter state 178
	bool           shift, and enter state 15
	let            shift, and enter state 16
	unit           shift, and enter state 17
	';'            shift, and enter state 179
	'('            shift, and enter state 67
	'}'            reduce using rule 5
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 149
	Expr1Left      goto state 150
	CallExpr       goto state 151
	ForStatement   goto state 152
	WhileStatement goto state 153
	IfStatement    goto state 154
	PassStatement  goto state 155
	DefvarStatementgoto state 156
	LetStyleDef    goto state 4
	CallStatement  goto state 157
	AssignStatementgoto state 158
	ReturnStatementgoto state 159
	GateModifier   goto state 160
	GateModifierListNonEmptygoto state 161
	ISQCore_UnitaryStatementgoto state 162
	ISQCore_MeasureExprgoto state 163
	ISQCore_MeasureStatementgoto state 164
	ISQCore_ResetStatementgoto state 165
	ISQCore_PrintStatementgoto state 166
	StatementNonEmptygoto state 167
	Statement      goto state 168
	SimpleType     goto state 169
	ISQCore_CStyleVarDefgoto state 7

State 141

	Procedure -> SimpleType IDENTIFIER '(' ProcedureArgList ')' '{' StatementList . '}'    (rule 119)

	'}'            shift, and enter state 148


State 142

	CompositeType -> Type . ArrayTypeDecorator          (rule 101)
	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '->' Type . '{' StatementList '}'    (rule 118)

	'['            shift, and enter state 30
	'{'            shift, and enter state 147

	ArrayTypeDecoratorgoto state 104

State 143

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '{' StatementList . '}'    (rule 117)

	'}'            shift, and enter state 146


State 144

	ISQCore_GatedefMatrixContent -> ISQCore_GatedefMatrixContent ';' ISQCore_GatedefMatrixRow .    (rule 61)
	ISQCore_GatedefMatrixRow -> ISQCore_GatedefMatrixRow . ',' Expr1    (rule 63)

	','            shift, and enter state 105
	';'            reduce using rule 61
	']'            reduce using rule 61


State 145

	Expr1 -> Expr1 . '+' Expr1                          (rule 13)
	Expr1 -> Expr1 . '-' Expr1                          (rule 14)
	Expr1 -> Expr1 . '*' Expr1                          (rule 15)
	Expr1 -> Expr1 . '/' Expr1                          (rule 16)
	Expr1 -> Expr1 . '==' Expr1                         (rule 17)
	Expr1 -> Expr1 . '!=' Expr1                         (rule 18)
	Expr1 -> Expr1 . '>' Expr1                          (rule 19)
	Expr1 -> Expr1 . '<' Expr1                          (rule 20)
	Expr1 -> Expr1 . '>=' Expr1                         (rule 21)
	Expr1 -> Expr1 . '<=' Expr1                         (rule 22)
	ISQCore_GatedefMatrixRow -> ISQCore_GatedefMatrixRow ',' Expr1 .    (rule 63)

	'=='           shift, and enter state 83
	'+'            shift, and enter state 84
	'-'            shift, and enter state 85
	'*'            shift, and enter state 86
	'/'            shift, and enter state 87
	'<'            shift, and enter state 88
	'>'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>='           shift, and enter state 91
	'!='           shift, and enter state 92
	','            reduce using rule 63
	';'            reduce using rule 63
	']'            reduce using rule 63


State 146

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '{' StatementList '}' .    (rule 117)

	procedure      reduce using rule 117
	int            reduce using rule 117
	qbit           reduce using rule 117
	defgate        reduce using rule 117
	bool           reduce using rule 117
	let            reduce using rule 117
	unit           reduce using rule 117
	%eof           reduce using rule 117


State 147

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '->' Type '{' . StatementList '}'    (rule 118)

	if             reduce using rule 4
	for            reduce using rule 4
	while          reduce using rule 4
	int            reduce using rule 4
	qbit           reduce using rule 4
	M              reduce using rule 4
	print          reduce using rule 4
	pass           reduce using rule 4
	return         reduce using rule 4
	ctrl           reduce using rule 4
	nctrl          reduce using rule 4
	inv            reduce using rule 4
	bool           reduce using rule 4
	let            reduce using rule 4
	unit           reduce using rule 4
	';'            reduce using rule 4
	'('            reduce using rule 4
	'}'            reduce using rule 4
	IDENTIFIER     reduce using rule 4

	StatementListMaybegoto state 140
	StatementList  goto state 201

State 148

	Procedure -> SimpleType IDENTIFIER '(' ProcedureArgList ')' '{' StatementList '}' .    (rule 119)

	procedure      reduce using rule 119
	int            reduce using rule 119
	qbit           reduce using rule 119
	defgate        reduce using rule 119
	bool           reduce using rule 119
	let            reduce using rule 119
	unit           reduce using rule 119
	%eof           reduce using rule 119


State 149

	Expr1Left -> ExprCallable .                         (rule 10)
	CallExpr -> ExprCallable . '(' Expr1List ')'        (rule 33)
	ISQCore_UnitaryStatement -> ExprCallable . '<' Expr1LeftListNonEmpty '>'    (rule 72)

	'='            reduce using rule 10
	'<'            shift, and enter state 200
	'('            shift, and enter state 94
	'['            reduce using rule 10


State 150

	Expr1Left -> Expr1Left . '[' Expr ']'               (rule 11)
	AssignStatement -> Expr1Left . '=' Expr             (rule 57)
	ISQCore_ResetStatement -> Expr1Left . '=' '|0>'     (rule 77)

	'='            shift, and enter state 199
	'['            shift, and enter state 93


State 151

	CallStatement -> CallExpr .                         (rule 56)

	';'            reduce using rule 56


State 152

	StatementNonEmpty -> ForStatement .                 (rule 81)

	if             reduce using rule 81
	for            reduce using rule 81
	while          reduce using rule 81
	int            reduce using rule 81
	qbit           reduce using rule 81
	M              reduce using rule 81
	print          reduce using rule 81
	pass           reduce using rule 81
	return         reduce using rule 81
	ctrl           reduce using rule 81
	nctrl          reduce using rule 81
	inv            reduce using rule 81
	bool           reduce using rule 81
	let            reduce using rule 81
	unit           reduce using rule 81
	';'            reduce using rule 81
	'('            reduce using rule 81
	'}'            reduce using rule 81
	IDENTIFIER     reduce using rule 81


State 153

	StatementNonEmpty -> WhileStatement .               (rule 82)

	if             reduce using rule 82
	for            reduce using rule 82
	while          reduce using rule 82
	int            reduce using rule 82
	qbit           reduce using rule 82
	M              reduce using rule 82
	print          reduce using rule 82
	pass           reduce using rule 82
	return         reduce using rule 82
	ctrl           reduce using rule 82
	nctrl          reduce using rule 82
	inv            reduce using rule 82
	bool           reduce using rule 82
	let            reduce using rule 82
	unit           reduce using rule 82
	';'            reduce using rule 82
	'('            reduce using rule 82
	'}'            reduce using rule 82
	IDENTIFIER     reduce using rule 82


State 154

	StatementNonEmpty -> IfStatement .                  (rule 80)

	if             reduce using rule 80
	for            reduce using rule 80
	while          reduce using rule 80
	int            reduce using rule 80
	qbit           reduce using rule 80
	M              reduce using rule 80
	print          reduce using rule 80
	pass           reduce using rule 80
	return         reduce using rule 80
	ctrl           reduce using rule 80
	nctrl          reduce using rule 80
	inv            reduce using rule 80
	bool           reduce using rule 80
	let            reduce using rule 80
	unit           reduce using rule 80
	';'            reduce using rule 80
	'('            reduce using rule 80
	'}'            reduce using rule 80
	IDENTIFIER     reduce using rule 80


State 155

	StatementNonEmpty -> PassStatement . ';'            (rule 79)

	';'            shift, and enter state 198


State 156

	StatementNonEmpty -> DefvarStatement . ';'          (rule 83)

	';'            shift, and enter state 197


State 157

	StatementNonEmpty -> CallStatement . ';'            (rule 84)

	';'            shift, and enter state 196


State 158

	StatementNonEmpty -> AssignStatement . ';'          (rule 85)

	';'            shift, and enter state 195


State 159

	StatementNonEmpty -> ReturnStatement . ';'          (rule 86)

	';'            shift, and enter state 194


State 160

	GateModifierListNonEmpty -> GateModifier .          (rule 71)

	ctrl           reduce using rule 71
	nctrl          reduce using rule 71
	inv            reduce using rule 71
	'('            reduce using rule 71
	IDENTIFIER     reduce using rule 71


State 161

	GateModifierListNonEmpty -> GateModifierListNonEmpty . GateModifier    (rule 70)
	ISQCore_UnitaryStatement -> GateModifierListNonEmpty . ExprCallable '<' Expr1LeftListNonEmpty '>'    (rule 73)

	ctrl           shift, and enter state 176
	nctrl          shift, and enter state 177
	inv            shift, and enter state 178
	'('            shift, and enter state 67
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 192
	GateModifier   goto state 193

State 162

	StatementNonEmpty -> ISQCore_UnitaryStatement . ';'    (rule 87)

	';'            shift, and enter state 191


State 163

	ISQCore_MeasureStatement -> ISQCore_MeasureExpr .    (rule 76)

	';'            reduce using rule 76


State 164

	StatementNonEmpty -> ISQCore_MeasureStatement . ';'    (rule 88)

	';'            shift, and enter state 190


State 165

	StatementNonEmpty -> ISQCore_ResetStatement . ';'    (rule 89)

	';'            shift, and enter state 189


State 166

	StatementNonEmpty -> ISQCore_PrintStatement . ';'    (rule 90)

	';'            shift, and enter state 188


State 167

	Statement -> StatementNonEmpty .                    (rule 91)

	if             reduce using rule 91
	for            reduce using rule 91
	while          reduce using rule 91
	int            reduce using rule 91
	qbit           reduce using rule 91
	M              reduce using rule 91
	print          reduce using rule 91
	pass           reduce using rule 91
	return         reduce using rule 91
	ctrl           reduce using rule 91
	nctrl          reduce using rule 91
	inv            reduce using rule 91
	bool           reduce using rule 91
	let            reduce using rule 91
	unit           reduce using rule 91
	';'            reduce using rule 91
	'('            reduce using rule 91
	'}'            reduce using rule 91
	IDENTIFIER     reduce using rule 91


State 168

	StatementListMaybe -> StatementListMaybe Statement .    (rule 3)

	if             reduce using rule 3
	for            reduce using rule 3
	while          reduce using rule 3
	int            reduce using rule 3
	qbit           reduce using rule 3
	M              reduce using rule 3
	print          reduce using rule 3
	pass           reduce using rule 3
	return         reduce using rule 3
	ctrl           reduce using rule 3
	nctrl          reduce using rule 3
	inv            reduce using rule 3
	bool           reduce using rule 3
	let            reduce using rule 3
	unit           reduce using rule 3
	';'            reduce using rule 3
	'('            reduce using rule 3
	'}'            reduce using rule 3
	IDENTIFIER     reduce using rule 3


State 169

	ISQCore_CStyleVarDef -> SimpleType . ISQCore_CStyleVarDefList    (rule 108)

	IDENTIFIER     shift, and enter state 49

	ISQCore_CStyleVarDefTermgoto state 22
	ISQCore_CStyleVarDefListgoto state 23

State 170

	IfStatement -> if . Expr '{' StatementList '}'      (rule 50)
	IfStatement -> if . Expr '{' StatementList '}' else '{' StatementList '}'    (rule 51)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 187
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 171

	ForStatement -> for . IDENTIFIER in RangeExpr '{' StatementList '}'    (rule 48)

	IDENTIFIER     shift, and enter state 186


State 172

	WhileStatement -> while . Expr '{' StatementList '}'    (rule 49)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 185
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 173

	ISQCore_PrintStatement -> print . Expr              (rule 78)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 184
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 174

	PassStatement -> pass .                             (rule 52)

	';'            reduce using rule 52


State 175

	ReturnStatement -> return . Expr                    (rule 58)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 183
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 176

	GateModifier -> ctrl . '<' NATURAL '>'              (rule 66)
	GateModifier -> ctrl .                              (rule 68)

	ctrl           reduce using rule 68
	nctrl          reduce using rule 68
	inv            reduce using rule 68
	'<'            shift, and enter state 182
	'('            reduce using rule 68
	IDENTIFIER     reduce using rule 68


State 177

	GateModifier -> nctrl . '<' NATURAL '>'             (rule 67)
	GateModifier -> nctrl .                             (rule 69)

	ctrl           reduce using rule 69
	nctrl          reduce using rule 69
	inv            reduce using rule 69
	'<'            shift, and enter state 181
	'('            reduce using rule 69
	IDENTIFIER     reduce using rule 69


State 178

	GateModifier -> inv .                               (rule 65)

	ctrl           reduce using rule 65
	nctrl          reduce using rule 65
	inv            reduce using rule 65
	'('            reduce using rule 65
	IDENTIFIER     reduce using rule 65


State 179

	Statement -> ';' .                                  (rule 92)

	if             reduce using rule 92
	for            reduce using rule 92
	while          reduce using rule 92
	int            reduce using rule 92
	qbit           reduce using rule 92
	M              reduce using rule 92
	print          reduce using rule 92
	pass           reduce using rule 92
	return         reduce using rule 92
	ctrl           reduce using rule 92
	nctrl          reduce using rule 92
	inv            reduce using rule 92
	bool           reduce using rule 92
	let            reduce using rule 92
	unit           reduce using rule 92
	';'            reduce using rule 92
	'('            reduce using rule 92
	'}'            reduce using rule 92
	IDENTIFIER     reduce using rule 92


State 180

	RangeExpr -> MaybeExpr1 ':' MaybeExpr1 ':' MaybeExpr1 .    (rule 36)

	','            reduce using rule 36
	';'            reduce using rule 36
	')'            reduce using rule 36
	']'            reduce using rule 36
	'{'            reduce using rule 36


State 181

	GateModifier -> nctrl '<' . NATURAL '>'             (rule 67)

	NATURAL        shift, and enter state 212


State 182

	GateModifier -> ctrl '<' . NATURAL '>'              (rule 66)

	NATURAL        shift, and enter state 211


State 183

	ReturnStatement -> return Expr .                    (rule 58)

	';'            reduce using rule 58


State 184

	ISQCore_PrintStatement -> print Expr .              (rule 78)

	';'            reduce using rule 78


State 185

	WhileStatement -> while Expr . '{' StatementList '}'    (rule 49)

	'{'            shift, and enter state 210


State 186

	ForStatement -> for IDENTIFIER . in RangeExpr '{' StatementList '}'    (rule 48)

	in             shift, and enter state 209


State 187

	IfStatement -> if Expr . '{' StatementList '}'      (rule 50)
	IfStatement -> if Expr . '{' StatementList '}' else '{' StatementList '}'    (rule 51)

	'{'            shift, and enter state 208


State 188

	StatementNonEmpty -> ISQCore_PrintStatement ';' .    (rule 90)

	if             reduce using rule 90
	for            reduce using rule 90
	while          reduce using rule 90
	int            reduce using rule 90
	qbit           reduce using rule 90
	M              reduce using rule 90
	print          reduce using rule 90
	pass           reduce using rule 90
	return         reduce using rule 90
	ctrl           reduce using rule 90
	nctrl          reduce using rule 90
	inv            reduce using rule 90
	bool           reduce using rule 90
	let            reduce using rule 90
	unit           reduce using rule 90
	';'            reduce using rule 90
	'('            reduce using rule 90
	'}'            reduce using rule 90
	IDENTIFIER     reduce using rule 90


State 189

	StatementNonEmpty -> ISQCore_ResetStatement ';' .    (rule 89)

	if             reduce using rule 89
	for            reduce using rule 89
	while          reduce using rule 89
	int            reduce using rule 89
	qbit           reduce using rule 89
	M              reduce using rule 89
	print          reduce using rule 89
	pass           reduce using rule 89
	return         reduce using rule 89
	ctrl           reduce using rule 89
	nctrl          reduce using rule 89
	inv            reduce using rule 89
	bool           reduce using rule 89
	let            reduce using rule 89
	unit           reduce using rule 89
	';'            reduce using rule 89
	'('            reduce using rule 89
	'}'            reduce using rule 89
	IDENTIFIER     reduce using rule 89


State 190

	StatementNonEmpty -> ISQCore_MeasureStatement ';' .    (rule 88)

	if             reduce using rule 88
	for            reduce using rule 88
	while          reduce using rule 88
	int            reduce using rule 88
	qbit           reduce using rule 88
	M              reduce using rule 88
	print          reduce using rule 88
	pass           reduce using rule 88
	return         reduce using rule 88
	ctrl           reduce using rule 88
	nctrl          reduce using rule 88
	inv            reduce using rule 88
	bool           reduce using rule 88
	let            reduce using rule 88
	unit           reduce using rule 88
	';'            reduce using rule 88
	'('            reduce using rule 88
	'}'            reduce using rule 88
	IDENTIFIER     reduce using rule 88


State 191

	StatementNonEmpty -> ISQCore_UnitaryStatement ';' .    (rule 87)

	if             reduce using rule 87
	for            reduce using rule 87
	while          reduce using rule 87
	int            reduce using rule 87
	qbit           reduce using rule 87
	M              reduce using rule 87
	print          reduce using rule 87
	pass           reduce using rule 87
	return         reduce using rule 87
	ctrl           reduce using rule 87
	nctrl          reduce using rule 87
	inv            reduce using rule 87
	bool           reduce using rule 87
	let            reduce using rule 87
	unit           reduce using rule 87
	';'            reduce using rule 87
	'('            reduce using rule 87
	'}'            reduce using rule 87
	IDENTIFIER     reduce using rule 87


State 192

	ISQCore_UnitaryStatement -> GateModifierListNonEmpty ExprCallable . '<' Expr1LeftListNonEmpty '>'    (rule 73)

	'<'            shift, and enter state 207


State 193

	GateModifierListNonEmpty -> GateModifierListNonEmpty GateModifier .    (rule 70)

	ctrl           reduce using rule 70
	nctrl          reduce using rule 70
	inv            reduce using rule 70
	'('            reduce using rule 70
	IDENTIFIER     reduce using rule 70


State 194

	StatementNonEmpty -> ReturnStatement ';' .          (rule 86)

	if             reduce using rule 86
	for            reduce using rule 86
	while          reduce using rule 86
	int            reduce using rule 86
	qbit           reduce using rule 86
	M              reduce using rule 86
	print          reduce using rule 86
	pass           reduce using rule 86
	return         reduce using rule 86
	ctrl           reduce using rule 86
	nctrl          reduce using rule 86
	inv            reduce using rule 86
	bool           reduce using rule 86
	let            reduce using rule 86
	unit           reduce using rule 86
	';'            reduce using rule 86
	'('            reduce using rule 86
	'}'            reduce using rule 86
	IDENTIFIER     reduce using rule 86


State 195

	StatementNonEmpty -> AssignStatement ';' .          (rule 85)

	if             reduce using rule 85
	for            reduce using rule 85
	while          reduce using rule 85
	int            reduce using rule 85
	qbit           reduce using rule 85
	M              reduce using rule 85
	print          reduce using rule 85
	pass           reduce using rule 85
	return         reduce using rule 85
	ctrl           reduce using rule 85
	nctrl          reduce using rule 85
	inv            reduce using rule 85
	bool           reduce using rule 85
	let            reduce using rule 85
	unit           reduce using rule 85
	';'            reduce using rule 85
	'('            reduce using rule 85
	'}'            reduce using rule 85
	IDENTIFIER     reduce using rule 85


State 196

	StatementNonEmpty -> CallStatement ';' .            (rule 84)

	if             reduce using rule 84
	for            reduce using rule 84
	while          reduce using rule 84
	int            reduce using rule 84
	qbit           reduce using rule 84
	M              reduce using rule 84
	print          reduce using rule 84
	pass           reduce using rule 84
	return         reduce using rule 84
	ctrl           reduce using rule 84
	nctrl          reduce using rule 84
	inv            reduce using rule 84
	bool           reduce using rule 84
	let            reduce using rule 84
	unit           reduce using rule 84
	';'            reduce using rule 84
	'('            reduce using rule 84
	'}'            reduce using rule 84
	IDENTIFIER     reduce using rule 84


State 197

	StatementNonEmpty -> DefvarStatement ';' .          (rule 83)

	if             reduce using rule 83
	for            reduce using rule 83
	while          reduce using rule 83
	int            reduce using rule 83
	qbit           reduce using rule 83
	M              reduce using rule 83
	print          reduce using rule 83
	pass           reduce using rule 83
	return         reduce using rule 83
	ctrl           reduce using rule 83
	nctrl          reduce using rule 83
	inv            reduce using rule 83
	bool           reduce using rule 83
	let            reduce using rule 83
	unit           reduce using rule 83
	';'            reduce using rule 83
	'('            reduce using rule 83
	'}'            reduce using rule 83
	IDENTIFIER     reduce using rule 83


State 198

	StatementNonEmpty -> PassStatement ';' .            (rule 79)

	if             reduce using rule 79
	for            reduce using rule 79
	while          reduce using rule 79
	int            reduce using rule 79
	qbit           reduce using rule 79
	M              reduce using rule 79
	print          reduce using rule 79
	pass           reduce using rule 79
	return         reduce using rule 79
	ctrl           reduce using rule 79
	nctrl          reduce using rule 79
	inv            reduce using rule 79
	bool           reduce using rule 79
	let            reduce using rule 79
	unit           reduce using rule 79
	';'            reduce using rule 79
	'('            reduce using rule 79
	'}'            reduce using rule 79
	IDENTIFIER     reduce using rule 79


State 199

	AssignStatement -> Expr1Left '=' . Expr             (rule 57)
	ISQCore_ResetStatement -> Expr1Left '=' . '|0>'     (rule 77)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'|0>'          shift, and enter state 206
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	Expr           goto state 205
	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 56
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 59
	Expr2          goto state 60
	ISQCore_MeasureExprgoto state 61

State 200

	ISQCore_UnitaryStatement -> ExprCallable '<' . Expr1LeftListNonEmpty '>'    (rule 72)

	'('            shift, and enter state 67
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 128
	Expr1Left      goto state 203
	Expr1LeftListNonEmptygoto state 204

State 201

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '->' Type '{' StatementList . '}'    (rule 118)

	'}'            shift, and enter state 202


State 202

	Procedure -> procedure IDENTIFIER '(' ProcedureArgList ')' '->' Type '{' StatementList '}' .    (rule 118)

	procedure      reduce using rule 118
	int            reduce using rule 118
	qbit           reduce using rule 118
	defgate        reduce using rule 118
	bool           reduce using rule 118
	let            reduce using rule 118
	unit           reduce using rule 118
	%eof           reduce using rule 118


State 203

	Expr1Left -> Expr1Left . '[' Expr ']'               (rule 11)
	Expr1LeftListNonEmpty -> Expr1Left .                (rule 44)

	'>'            reduce using rule 44
	','            reduce using rule 44
	'['            shift, and enter state 93


State 204

	Expr1LeftListNonEmpty -> Expr1LeftListNonEmpty . ',' Expr1Left    (rule 45)
	ISQCore_UnitaryStatement -> ExprCallable '<' Expr1LeftListNonEmpty . '>'    (rule 72)

	'>'            shift, and enter state 219
	','            shift, and enter state 220


State 205

	AssignStatement -> Expr1Left '=' Expr .             (rule 57)

	';'            reduce using rule 57


State 206

	ISQCore_ResetStatement -> Expr1Left '=' '|0>' .     (rule 77)

	';'            reduce using rule 77


State 207

	ISQCore_UnitaryStatement -> GateModifierListNonEmpty ExprCallable '<' . Expr1LeftListNonEmpty '>'    (rule 73)

	'('            shift, and enter state 67
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 128
	Expr1Left      goto state 203
	Expr1LeftListNonEmptygoto state 218

State 208

	IfStatement -> if Expr '{' . StatementList '}'      (rule 50)
	IfStatement -> if Expr '{' . StatementList '}' else '{' StatementList '}'    (rule 51)

	if             reduce using rule 4
	for            reduce using rule 4
	while          reduce using rule 4
	int            reduce using rule 4
	qbit           reduce using rule 4
	M              reduce using rule 4
	print          reduce using rule 4
	pass           reduce using rule 4
	return         reduce using rule 4
	ctrl           reduce using rule 4
	nctrl          reduce using rule 4
	inv            reduce using rule 4
	bool           reduce using rule 4
	let            reduce using rule 4
	unit           reduce using rule 4
	';'            reduce using rule 4
	'('            reduce using rule 4
	'}'            reduce using rule 4
	IDENTIFIER     reduce using rule 4

	StatementListMaybegoto state 140
	StatementList  goto state 217

State 209

	ForStatement -> for IDENTIFIER in . RangeExpr '{' StatementList '}'    (rule 48)

	M              shift, and enter state 62
	true           shift, and enter state 63
	false          shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	':'            reduce using rule 35
	NATURAL        shift, and enter state 69
	FLOAT          shift, and enter state 70
	IMAGPART       shift, and enter state 71
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 54
	Expr1Left      goto state 55
	Expr1          goto state 126
	CallExpr       goto state 57
	MaybeExpr1     goto state 58
	RangeExpr      goto state 216
	ISQCore_MeasureExprgoto state 61

State 210

	WhileStatement -> while Expr '{' . StatementList '}'    (rule 49)

	if             reduce using rule 4
	for            reduce using rule 4
	while          reduce using rule 4
	int            reduce using rule 4
	qbit           reduce using rule 4
	M              reduce using rule 4
	print          reduce using rule 4
	pass           reduce using rule 4
	return         reduce using rule 4
	ctrl           reduce using rule 4
	nctrl          reduce using rule 4
	inv            reduce using rule 4
	bool           reduce using rule 4
	let            reduce using rule 4
	unit           reduce using rule 4
	';'            reduce using rule 4
	'('            reduce using rule 4
	'}'            reduce using rule 4
	IDENTIFIER     reduce using rule 4

	StatementListMaybegoto state 140
	StatementList  goto state 215

State 211

	GateModifier -> ctrl '<' NATURAL . '>'              (rule 66)

	'>'            shift, and enter state 214


State 212

	GateModifier -> nctrl '<' NATURAL . '>'             (rule 67)

	'>'            shift, and enter state 213


State 213

	GateModifier -> nctrl '<' NATURAL '>' .             (rule 67)

	ctrl           reduce using rule 67
	nctrl          reduce using rule 67
	inv            reduce using rule 67
	'('            reduce using rule 67
	IDENTIFIER     reduce using rule 67


State 214

	GateModifier -> ctrl '<' NATURAL '>' .              (rule 66)

	ctrl           reduce using rule 66
	nctrl          reduce using rule 66
	inv            reduce using rule 66
	'('            reduce using rule 66
	IDENTIFIER     reduce using rule 66


State 215

	WhileStatement -> while Expr '{' StatementList . '}'    (rule 49)

	'}'            shift, and enter state 225


State 216

	ForStatement -> for IDENTIFIER in RangeExpr . '{' StatementList '}'    (rule 48)

	'{'            shift, and enter state 224


State 217

	IfStatement -> if Expr '{' StatementList . '}'      (rule 50)
	IfStatement -> if Expr '{' StatementList . '}' else '{' StatementList '}'    (rule 51)

	'}'            shift, and enter state 223


State 218

	Expr1LeftListNonEmpty -> Expr1LeftListNonEmpty . ',' Expr1Left    (rule 45)
	ISQCore_UnitaryStatement -> GateModifierListNonEmpty ExprCallable '<' Expr1LeftListNonEmpty . '>'    (rule 73)

	'>'            shift, and enter state 222
	','            shift, and enter state 220


State 219

	ISQCore_UnitaryStatement -> ExprCallable '<' Expr1LeftListNonEmpty '>' .    (rule 72)

	';'            reduce using rule 72


State 220

	Expr1LeftListNonEmpty -> Expr1LeftListNonEmpty ',' . Expr1Left    (rule 45)

	'('            shift, and enter state 67
	IDENTIFIER     shift, and enter state 72

	ExprCallable   goto state 128
	Expr1Left      goto state 221

State 221

	Expr1Left -> Expr1Left . '[' Expr ']'               (rule 11)
	Expr1LeftListNonEmpty -> Expr1LeftListNonEmpty ',' Expr1Left .    (rule 45)

	'>'            reduce using rule 45
	','            reduce using rule 45
	'['            shift, and enter state 93


State 222

	ISQCore_UnitaryStatement -> GateModifierListNonEmpty ExprCallable '<' Expr1LeftListNonEmpty '>' .    (rule 73)

	';'            reduce using rule 73


State 223

	IfStatement -> if Expr '{' StatementList '}' .      (rule 50)
	IfStatement -> if Expr '{' StatementList '}' . else '{' StatementList '}'    (rule 51)

	if             reduce using rule 50
	else           shift, and enter state 227
	for            reduce using rule 50
	while          reduce using rule 50
	int            reduce using rule 50
	qbit           reduce using rule 50
	M              reduce using rule 50
	print          reduce using rule 50
	pass           reduce using rule 50
	return         reduce using rule 50
	ctrl           reduce using rule 50
	nctrl          reduce using rule 50
	inv            reduce using rule 50
	bool           reduce using rule 50
	let            reduce using rule 50
	unit           reduce using rule 50
	';'            reduce using rule 50
	'('            reduce using rule 50
	'}'            reduce using rule 50
	IDENTIFIER     reduce using rule 50


State 224

	ForStatement -> for IDENTIFIER in RangeExpr '{' . StatementList '}'    (rule 48)

	if             reduce using rule 4
	for            reduce using rule 4
	while          reduce using rule 4
	int            reduce using rule 4
	qbit           reduce using rule 4
	M              reduce using rule 4
	print          reduce using rule 4
	pass           reduce using rule 4
	return         reduce using rule 4
	ctrl           reduce using rule 4
	nctrl          reduce using rule 4
	inv            reduce using rule 4
	bool           reduce using rule 4
	let            reduce using rule 4
	unit           reduce using rule 4
	';'            reduce using rule 4
	'('            reduce using rule 4
	'}'            reduce using rule 4
	IDENTIFIER     reduce using rule 4

	StatementListMaybegoto state 140
	StatementList  goto state 226

State 225

	WhileStatement -> while Expr '{' StatementList '}' .    (rule 49)

	if             reduce using rule 49
	for            reduce using rule 49
	while          reduce using rule 49
	int            reduce using rule 49
	qbit           reduce using rule 49
	M              reduce using rule 49
	print          reduce using rule 49
	pass           reduce using rule 49
	return         reduce using rule 49
	ctrl           reduce using rule 49
	nctrl          reduce using rule 49
	inv            reduce using rule 49
	bool           reduce using rule 49
	let            reduce using rule 49
	unit           reduce using rule 49
	';'            reduce using rule 49
	'('            reduce using rule 49
	'}'            reduce using rule 49
	IDENTIFIER     reduce using rule 49


State 226

	ForStatement -> for IDENTIFIER in RangeExpr '{' StatementList . '}'    (rule 48)

	'}'            shift, and enter state 229


State 227

	IfStatement -> if Expr '{' StatementList '}' else . '{' StatementList '}'    (rule 51)

	'{'            shift, and enter state 228


State 228

	IfStatement -> if Expr '{' StatementList '}' else '{' . StatementList '}'    (rule 51)

	if             reduce using rule 4
	for            reduce using rule 4
	while          reduce using rule 4
	int            reduce using rule 4
	qbit           reduce using rule 4
	M              reduce using rule 4
	print          reduce using rule 4
	pass           reduce using rule 4
	return         reduce using rule 4
	ctrl           reduce using rule 4
	nctrl          reduce using rule 4
	inv            reduce using rule 4
	bool           reduce using rule 4
	let            reduce using rule 4
	unit           reduce using rule 4
	';'            reduce using rule 4
	'('            reduce using rule 4
	'}'            reduce using rule 4
	IDENTIFIER     reduce using rule 4

	StatementListMaybegoto state 140
	StatementList  goto state 230

State 229

	ForStatement -> for IDENTIFIER in RangeExpr '{' StatementList '}' .    (rule 48)

	if             reduce using rule 48
	for            reduce using rule 48
	while          reduce using rule 48
	int            reduce using rule 48
	qbit           reduce using rule 48
	M              reduce using rule 48
	print          reduce using rule 48
	pass           reduce using rule 48
	return         reduce using rule 48
	ctrl           reduce using rule 48
	nctrl          reduce using rule 48
	inv            reduce using rule 48
	bool           reduce using rule 48
	let            reduce using rule 48
	unit           reduce using rule 48
	';'            reduce using rule 48
	'('            reduce using rule 48
	'}'            reduce using rule 48
	IDENTIFIER     reduce using rule 48


State 230

	IfStatement -> if Expr '{' StatementList '}' else '{' StatementList . '}'    (rule 51)

	'}'            shift, and enter state 231


State 231

	IfStatement -> if Expr '{' StatementList '}' else '{' StatementList '}' .    (rule 51)

	if             reduce using rule 51
	for            reduce using rule 51
	while          reduce using rule 51
	int            reduce using rule 51
	qbit           reduce using rule 51
	M              reduce using rule 51
	print          reduce using rule 51
	pass           reduce using rule 51
	return         reduce using rule 51
	ctrl           reduce using rule 51
	nctrl          reduce using rule 51
	inv            reduce using rule 51
	bool           reduce using rule 51
	let            reduce using rule 51
	unit           reduce using rule 51
	';'            reduce using rule 51
	'('            reduce using rule 51
	'}'            reduce using rule 51
	IDENTIFIER     reduce using rule 51


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 124
Number of terminals: 51
Number of non-terminals: 52
Number of states: 232
