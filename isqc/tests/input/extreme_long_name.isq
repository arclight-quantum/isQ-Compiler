import std;

qbit QBIT_Testing_classical_software_has_been_an_active_research_area_for_decades__thus_there_is_a_considerable_body_of_knowledge_in_this_area__which_could_potentially_help_with_devising_quantum_software_testing_methods__However__quantum_software_adheres_to_quantum_mechanics_principles_and_has_novel_features__such_as_qubits__superposition__and_entanglement__which_introduce_a_new_dimension_of_complexity__thereby__raising_novel_challenges_on_quantum_software_testing__see_Figure_1___First__it_is_impossible_to_directly_read_and_check_quantum_software_states_in_superposition_because_measuring_qubits_results_in_the_destruction_of_the_superposition_property_of_the_program__In_comparison__for_classical_software__we_can_instrument_the_program_to_read_its_states_at_any_location_whenever_it_is_needed__Second__when_testing_a_quantum_program__it_is_difficult_to_precisely_define_the_test_oracle__i_e___a_mechanism_for_determining_whether_the_output_is_expected_for_a_given_input__For_simple_quantum_programs__one_could_define_probabilistic_test_oracles__indicating_whether_a_test_case_passes_fails_with_a_given_statistical_confidence___introducing_further_challenges_such_as_selecting_proper_statistical_tests_and_defining_a_suitable_number_of_measurements_observations__Test_oracles_might_not_even_exist_for_complex_applications__e_g___weather_forecasting__molecular_design___Last__but_not_least__for_classical_software_testing__there_exist_methodologies_for_eliciting__formally_and_informally___specifying__and_modelling_test_oracles__or_even_generating_test_oracles_with_requirements_as_the_basis__For_quantum_software_testing__such_methodologies_do_not_exist_;
int INT_Testing_classical_software_has_been_an_active_research_area_for_decades__thus_there_is_a_considerable_body_of_knowledge_in_this_area__which_could_potentially_help_with_devising_quantum_software_testing_methods__However__quantum_software_adheres_to_quantum_mechanics_principles_and_has_novel_features__such_as_qubits__superposition__and_entanglement__which_introduce_a_new_dimension_of_complexity__thereby__raising_novel_challenges_on_quantum_software_testing__see_Figure_1___First__it_is_impossible_to_directly_read_and_check_quantum_software_states_in_superposition_because_measuring_qubits_results_in_the_destruction_of_the_superposition_property_of_the_program__In_comparison__for_classical_software__we_can_instrument_the_program_to_read_its_states_at_any_location_whenever_it_is_needed__Second__when_testing_a_quantum_program__it_is_difficult_to_precisely_define_the_test_oracle__i_e___a_mechanism_for_determining_whether_the_output_is_expected_for_a_given_input__For_simple_quantum_programs__one_could_define_probabilistic_test_oracles__indicating_whether_a_test_case_passes_fails_with_a_given_statistical_confidence___introducing_further_challenges_such_as_selecting_proper_statistical_tests_and_defining_a_suitable_number_of_measurements_observations__Test_oracles_might_not_even_exist_for_complex_applications__e_g___weather_forecasting__molecular_design___Last__but_not_least__for_classical_software_testing__there_exist_methodologies_for_eliciting__formally_and_informally___specifying__and_modelling_test_oracles__or_even_generating_test_oracles_with_requirements_as_the_basis__For_quantum_software_testing__such_methodologies_do_not_exist_;

procedure PROC_Testing_classical_software_has_been_an_active_research_area_for_decades__thus_there_is_a_considerable_body_of_knowledge_in_this_area__which_could_potentially_help_with_devising_quantum_software_testing_methods__However__quantum_software_adheres_to_quantum_mechanics_principles_and_has_novel_features__such_as_qubits__superposition__and_entanglement__which_introduce_a_new_dimension_of_complexity__thereby__raising_novel_challenges_on_quantum_software_testing__see_Figure_1___First__it_is_impossible_to_directly_read_and_check_quantum_software_states_in_superposition_because_measuring_qubits_results_in_the_destruction_of_the_superposition_property_of_the_program__In_comparison__for_classical_software__we_can_instrument_the_program_to_read_its_states_at_any_location_whenever_it_is_needed__Second__when_testing_a_quantum_program__it_is_difficult_to_precisely_define_the_test_oracle__i_e___a_mechanism_for_determining_whether_the_output_is_expected_for_a_given_input__For_simple_quantum_programs__one_could_define_probabilistic_test_oracles__indicating_whether_a_test_case_passes_fails_with_a_given_statistical_confidence___introducing_further_challenges_such_as_selecting_proper_statistical_tests_and_defining_a_suitable_number_of_measurements_observations__Test_oracles_might_not_even_exist_for_complex_applications__e_g___weather_forecasting__molecular_design___Last__but_not_least__for_classical_software_testing__there_exist_methodologies_for_eliciting__formally_and_informally___specifying__and_modelling_test_oracles__or_even_generating_test_oracles_with_requirements_as_the_basis__For_quantum_software_testing__such_methodologies_do_not_exist_()
{
    print INT_Testing_classical_software_has_been_an_active_research_area_for_decades__thus_there_is_a_considerable_body_of_knowledge_in_this_area__which_could_potentially_help_with_devising_quantum_software_testing_methods__However__quantum_software_adheres_to_quantum_mechanics_principles_and_has_novel_features__such_as_qubits__superposition__and_entanglement__which_introduce_a_new_dimension_of_complexity__thereby__raising_novel_challenges_on_quantum_software_testing__see_Figure_1___First__it_is_impossible_to_directly_read_and_check_quantum_software_states_in_superposition_because_measuring_qubits_results_in_the_destruction_of_the_superposition_property_of_the_program__In_comparison__for_classical_software__we_can_instrument_the_program_to_read_its_states_at_any_location_whenever_it_is_needed__Second__when_testing_a_quantum_program__it_is_difficult_to_precisely_define_the_test_oracle__i_e___a_mechanism_for_determining_whether_the_output_is_expected_for_a_given_input__For_simple_quantum_programs__one_could_define_probabilistic_test_oracles__indicating_whether_a_test_case_passes_fails_with_a_given_statistical_confidence___introducing_further_challenges_such_as_selecting_proper_statistical_tests_and_defining_a_suitable_number_of_measurements_observations__Test_oracles_might_not_even_exist_for_complex_applications__e_g___weather_forecasting__molecular_design___Last__but_not_least__for_classical_software_testing__there_exist_methodologies_for_eliciting__formally_and_informally___specifying__and_modelling_test_oracles__or_even_generating_test_oracles_with_requirements_as_the_basis__For_quantum_software_testing__such_methodologies_do_not_exist_;
}

procedure main()
{
    if (INT_Testing_classical_software_has_been_an_active_research_area_for_decades__thus_there_is_a_considerable_body_of_knowledge_in_this_area__which_could_potentially_help_with_devising_quantum_software_testing_methods__However__quantum_software_adheres_to_quantum_mechanics_principles_and_has_novel_features__such_as_qubits__superposition__and_entanglement__which_introduce_a_new_dimension_of_complexity__thereby__raising_novel_challenges_on_quantum_software_testing__see_Figure_1___First__it_is_impossible_to_directly_read_and_check_quantum_software_states_in_superposition_because_measuring_qubits_results_in_the_destruction_of_the_superposition_property_of_the_program__In_comparison__for_classical_software__we_can_instrument_the_program_to_read_its_states_at_any_location_whenever_it_is_needed__Second__when_testing_a_quantum_program__it_is_difficult_to_precisely_define_the_test_oracle__i_e___a_mechanism_for_determining_whether_the_output_is_expected_for_a_given_input__For_simple_quantum_programs__one_could_define_probabilistic_test_oracles__indicating_whether_a_test_case_passes_fails_with_a_given_statistical_confidence___introducing_further_challenges_such_as_selecting_proper_statistical_tests_and_defining_a_suitable_number_of_measurements_observations__Test_oracles_might_not_even_exist_for_complex_applications__e_g___weather_forecasting__molecular_design___Last__but_not_least__for_classical_software_testing__there_exist_methodologies_for_eliciting__formally_and_informally___specifying__and_modelling_test_oracles__or_even_generating_test_oracles_with_requirements_as_the_basis__For_quantum_software_testing__such_methodologies_do_not_exist_ > INT_Testing_classical_software_has_been_an_active_research_area_for_decades__thus_there_is_a_considerable_body_of_knowledge_in_this_area__which_could_potentially_help_with_devising_quantum_software_testing_methods__However__quantum_software_adheres_to_quantum_mechanics_principles_and_has_novel_features__such_as_qubits__superposition__and_entanglement__which_introduce_a_new_dimension_of_complexity__thereby__raising_novel_challenges_on_quantum_software_testing__see_Figure_1___First__it_is_impossible_to_directly_read_and_check_quantum_software_states_in_superposition_because_measuring_qubits_results_in_the_destruction_of_the_superposition_property_of_the_program__In_comparison__for_classical_software__we_can_instrument_the_program_to_read_its_states_at_any_location_whenever_it_is_needed__Second__when_testing_a_quantum_program__it_is_difficult_to_precisely_define_the_test_oracle__i_e___a_mechanism_for_determining_whether_the_output_is_expected_for_a_given_input__For_simple_quantum_programs__one_could_define_probabilistic_test_oracles__indicating_whether_a_test_case_passes_fails_with_a_given_statistical_confidence___introducing_further_challenges_such_as_selecting_proper_statistical_tests_and_defining_a_suitable_number_of_measurements_observations__Test_oracles_might_not_even_exist_for_complex_applications__e_g___weather_forecasting__molecular_design___Last__but_not_least__for_classical_software_testing__there_exist_methodologies_for_eliciting__formally_and_informally___specifying__and_modelling_test_oracles__or_even_generating_test_oracles_with_requirements_as_the_basis__For_quantum_software_testing__such_methodologies_do_not_exist_ - 1)
    {
        H(QBIT_Testing_classical_software_has_been_an_active_research_area_for_decades__thus_there_is_a_considerable_body_of_knowledge_in_this_area__which_could_potentially_help_with_devising_quantum_software_testing_methods__However__quantum_software_adheres_to_quantum_mechanics_principles_and_has_novel_features__such_as_qubits__superposition__and_entanglement__which_introduce_a_new_dimension_of_complexity__thereby__raising_novel_challenges_on_quantum_software_testing__see_Figure_1___First__it_is_impossible_to_directly_read_and_check_quantum_software_states_in_superposition_because_measuring_qubits_results_in_the_destruction_of_the_superposition_property_of_the_program__In_comparison__for_classical_software__we_can_instrument_the_program_to_read_its_states_at_any_location_whenever_it_is_needed__Second__when_testing_a_quantum_program__it_is_difficult_to_precisely_define_the_test_oracle__i_e___a_mechanism_for_determining_whether_the_output_is_expected_for_a_given_input__For_simple_quantum_programs__one_could_define_probabilistic_test_oracles__indicating_whether_a_test_case_passes_fails_with_a_given_statistical_confidence___introducing_further_challenges_such_as_selecting_proper_statistical_tests_and_defining_a_suitable_number_of_measurements_observations__Test_oracles_might_not_even_exist_for_complex_applications__e_g___weather_forecasting__molecular_design___Last__but_not_least__for_classical_software_testing__there_exist_methodologies_for_eliciting__formally_and_informally___specifying__and_modelling_test_oracles__or_even_generating_test_oracles_with_requirements_as_the_basis__For_quantum_software_testing__such_methodologies_do_not_exist_);
        PROC_Testing_classical_software_has_been_an_active_research_area_for_decades__thus_there_is_a_considerable_body_of_knowledge_in_this_area__which_could_potentially_help_with_devising_quantum_software_testing_methods__However__quantum_software_adheres_to_quantum_mechanics_principles_and_has_novel_features__such_as_qubits__superposition__and_entanglement__which_introduce_a_new_dimension_of_complexity__thereby__raising_novel_challenges_on_quantum_software_testing__see_Figure_1___First__it_is_impossible_to_directly_read_and_check_quantum_software_states_in_superposition_because_measuring_qubits_results_in_the_destruction_of_the_superposition_property_of_the_program__In_comparison__for_classical_software__we_can_instrument_the_program_to_read_its_states_at_any_location_whenever_it_is_needed__Second__when_testing_a_quantum_program__it_is_difficult_to_precisely_define_the_test_oracle__i_e___a_mechanism_for_determining_whether_the_output_is_expected_for_a_given_input__For_simple_quantum_programs__one_could_define_probabilistic_test_oracles__indicating_whether_a_test_case_passes_fails_with_a_given_statistical_confidence___introducing_further_challenges_such_as_selecting_proper_statistical_tests_and_defining_a_suitable_number_of_measurements_observations__Test_oracles_might_not_even_exist_for_complex_applications__e_g___weather_forecasting__molecular_design___Last__but_not_least__for_classical_software_testing__there_exist_methodologies_for_eliciting__formally_and_informally___specifying__and_modelling_test_oracles__or_even_generating_test_oracles_with_requirements_as_the_basis__For_quantum_software_testing__such_methodologies_do_not_exist_();
    }
}